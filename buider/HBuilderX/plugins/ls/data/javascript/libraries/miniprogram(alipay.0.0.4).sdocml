<?xml version="1.0" encoding="UTF-8"?>
<javascript>
    <class type="mini-types.exports" superclass="None">
        <methods>
            <method name="App">
                <parameters>
                    <parameter name="options" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;&lt;code&gt;App()&lt;/code&gt; 接受一个 object 作为参数，用来配置小程序的生命周期等。&lt;/p&gt;
</description>
            </method>
            <method name="getApp">
                <parameters/>
                <return-types>
                    <return-type type="None"/>
                </return-types>
                <description>&lt;p&gt;获取小程序实例，一般用在各个子页面之中获取顶层应用。&lt;/p&gt;
</description>
            </method>
            <method name="Component">
                <parameters>
                    <parameter name="options" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="Page">
                <parameters>
                    <parameter name="options" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;Page() 函数用来注册一个页面。
接受一个 object 参数，其指定页面的初始数据、生命周期函数、事件处理函数等。&lt;/p&gt;
</description>
            </method>
            <method name="getCurrentPages">
                <parameters/>
                <return-types>
                    <return-type type="Array"/>
                </return-types>
                <description>&lt;p&gt;getCurrentPages() 函数用于获取当前页面栈的实例，
以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="tinyapp" type="tinyapp" scope="static">
                <description></description>
            </property>
            <property name="my" type="my" scope="static">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="tinyapp" superclass="None">
        <methods/>
        <properties>
            <property name="IBaseEvent" type="IBaseEvent" scope="static">
                <description>&lt;p&gt;事件对象 &lt;a href="https://docs.alipay.com/mini/framework/events#a-namefc3wdba%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1"&gt;https://docs.alipay.com/mini/framework/events#a-namefc3wdba%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1&lt;/a&gt;&lt;/p&gt;
</description>
            </property>
            <property name="ICustomEvent" type="ICustomEvent" scope="static">
                <description></description>
            </property>
            <property name="ITouch" type="ITouch" scope="static">
                <description></description>
            </property>
            <property name="ICanvasTouch" type="ICanvasTouch" scope="static">
                <description></description>
            </property>
            <property name="ITouchEvent" type="ITouchEvent" scope="static">
                <description></description>
            </property>
            <property name="IAppLaunchOptions" type="IAppLaunchOptions" scope="static">
                <description></description>
            </property>
            <property name="IAppOptionsMethods" type="IAppOptionsMethods" scope="static">
                <description></description>
            </property>
            <property name="IAppInstance" type="IAppInstance" scope="static">
                <description></description>
            </property>
            <property name="IComponentLifeCycleMethods" type="IComponentLifeCycleMethods" scope="static">
                <description></description>
            </property>
            <property name="IComponentMethods" type="IComponentMethods" scope="static">
                <description></description>
            </property>
            <property name="IComponentInstance" type="IComponentInstance" scope="static">
                <description></description>
            </property>
            <property name="IOnShareAppMessageResult" type="IOnShareAppMessageResult" scope="static">
                <description></description>
            </property>
            <property name="IPageEvents" type="IPageEvents" scope="static">
                <description></description>
            </property>
            <property name="IPageOptionsMethods" type="IPageOptionsMethods" scope="static">
                <description></description>
            </property>
            <property name="IPageInstance" type="IPageInstance" scope="static">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IBaseEvent" superclass="None">
        <methods/>
        <properties>
            <property name="type" type="String">
                <description></description>
            </property>
            <property name="timeStamp" type="Number">
                <description></description>
            </property>
            <property name="target" type="None">
                <description></description>
            </property>
            <property name="currentTarget" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ICustomEvent" superclass="None">
        <methods/>
        <properties>
            <property name="detail" type="Readonly">
                <description>&lt;p&gt;自定义事件所携带的数据，如表单组件的提交事件会携带用户的输入信息，
媒体的错误事件会携带错误信息，详细的描述请参考组件定义中各个事件的定义。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ITouch" superclass="None">
        <methods/>
        <properties>
            <property name="identifier" type="Number">
                <description></description>
            </property>
            <property name="pageX" type="Number">
                <description></description>
            </property>
            <property name="pageY" type="Number">
                <description></description>
            </property>
            <property name="clientX" type="Number">
                <description></description>
            </property>
            <property name="clientY" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ICanvasTouch" superclass="None">
        <methods/>
        <properties>
            <property name="identifier" type="Number">
                <description></description>
            </property>
            <property name="x" type="Number">
                <description></description>
            </property>
            <property name="y" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ITouchEvent" superclass="None">
        <methods/>
        <properties>
            <property name="touches" type="ReadonlyArray">
                <description></description>
            </property>
            <property name="changedTouches" type="ReadonlyArray">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IAppLaunchOptions" superclass="None">
        <methods/>
        <properties>
            <property name="query" type="Query">
                <description>&lt;p&gt;当前小程序的 query，从启动参数的 query 字段解析而来&lt;/p&gt;
</description>
            </property>
            <property name="path" type="String">
                <description>&lt;p&gt;当前小程序的页面地址，从启动参数 page 字段解析而来，page 忽略时默认为首页&lt;/p&gt;
</description>
            </property>
            <property name="referrerInfo" type="None">
                <description>&lt;p&gt;来源信息。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IAppOptionsMethods" superclass="None">
        <methods>
            <method name="onLaunch">
                <parameters>
                    <parameter name="options" type="IAppLaunchOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数。&lt;/p&gt;
&lt;p&gt;监听小程序初始化。&lt;/p&gt;
&lt;p&gt;当小程序初始化完成时，会触发 onLaunch（全局只触发一次）。&lt;/p&gt;
</description>
            </method>
            <method name="onShow">
                <parameters>
                    <parameter name="options" type="IAppLaunchOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数。&lt;/p&gt;
&lt;p&gt;监听小程序显示。&lt;/p&gt;
&lt;p&gt;当小程序启动，或从后台进入前台显示，会触发 onShow。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 不要在 onShow 中进行 redirectTo/navigateTo 等操作页面栈的行为。&lt;/p&gt;
</description>
            </method>
            <method name="onHide">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数。&lt;/p&gt;
&lt;p&gt;监听小程序隐藏。&lt;/p&gt;
&lt;p&gt;当小程序从前台进入后台，会触发 onHide。&lt;/p&gt;
</description>
            </method>
            <method name="onError">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;错误监听函数。&lt;/p&gt;
&lt;p&gt;当小程序发生脚本错误，或者 API 调用失败时，会触发 onError 并带上错误信息。&lt;/p&gt;
</description>
            </method>
            <method name="onShareAppMessage">
                <parameters>
                    <parameter name="options" type="OnShareAppMessageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="IOnShareAppMessageResult"/>
                </return-types>
                <description>&lt;p&gt;全局分享配置。&lt;/p&gt;
&lt;p&gt;当页面未设置 &lt;code&gt;page.onShareAppMessage&lt;/code&gt; 时调用分享会执行全局的分享设置。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IAppInstance" superclass="None">
        <methods/>
        <properties>
            <property name="globalData" type="G">
                <description>&lt;p&gt;全局状态数据。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IComponentLifeCycleMethods" superclass="None">
        <methods>
            <method name="onInit">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;组件生命周期函数，组件创建时触发&lt;/p&gt;
</description>
            </method>
            <method name="deriveDataFromProps">
                <parameters>
                    <parameter name="nextProps" type="Partial"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;组件生命周期函数，组件创建时和更新前触发&lt;/p&gt;
</description>
            </method>
            <method name="didMount">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;组件生命周期函数，组件创建完毕时触发&lt;/p&gt;
</description>
            </method>
            <method name="didUpdate">
                <parameters>
                    <parameter name="prevProps" type="Partial"/>
                    <parameter name="prevData" type="Partial"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;组件生命周期函数，组件更新完毕时触发&lt;/p&gt;
</description>
            </method>
            <method name="didUnmount">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;组件生命周期函数，组件删除时触发&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IComponentMethods" superclass="None">
        <methods/>
        <properties/>
    </class>
    <class type="IComponentInstance" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="D">
                <description>&lt;p&gt;组件内部状态&lt;/p&gt;
</description>
            </property>
            <property name="props" type="P">
                <description>&lt;p&gt;传入组件的属性&lt;/p&gt;
</description>
            </property>
            <property name="setData" type="SetDataMethod">
                <description>&lt;p&gt;设置data触发视图渲染&lt;/p&gt;
</description>
            </property>
            <property name="$page" type="IPageInstance">
                <description>&lt;p&gt;组件所属页面实例&lt;/p&gt;
</description>
            </property>
            <property name="$id" type="Number">
                <description>&lt;p&gt;组件 id，可直接在组件 axml 中渲染值&lt;/p&gt;
</description>
            </property>
            <property name="is" type="String">
                <description>&lt;p&gt;组件路径&lt;/p&gt;
</description>
            </property>
            <property name="$spliceData" type="Function">
                <description>&lt;p&gt;设置data触发视图渲染&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnShareAppMessageResult" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="title" type="String">
                <description></description>
            </property>
            <property name="desc" type="String">
                <description></description>
            </property>
            <property name="path" type="String">
                <description></description>
            </property>
            <property name="content" type="String">
                <description></description>
            </property>
            <property name="imageUrl" type="String">
                <description></description>
            </property>
            <property name="bgImgUrl" type="String">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IPageEvents" superclass="None">
        <methods>
            <method name="onBack">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onKeyboardHeight">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onOptionMenuClick">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onPopMenuClick">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onPullIntercept">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onPullDownRefresh">
                <parameters>
                    <parameter name="params" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;页面相关事件处理函数--监听用户下拉动作&lt;/p&gt;
</description>
            </method>
            <method name="onTitleClick">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="onTabItemTap">
                <parameters>
                    <parameter name="item" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
点击标签（tab）时触发。&lt;/p&gt;
</description>
            </method>
            <method name="beforeTabItemTap">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IPageOptionsMethods" superclass="None">
        <methods>
            <method name="onLoad">
                <parameters>
                    <parameter name="query" type="Query"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数--监听页面加载&lt;/p&gt;
</description>
            </method>
            <method name="onReady">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数--监听页面初次渲染完成&lt;/p&gt;
</description>
            </method>
            <method name="onShow">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数--监听页面显示&lt;/p&gt;
</description>
            </method>
            <method name="onHide">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数--监听页面隐藏&lt;/p&gt;
</description>
            </method>
            <method name="onUnload">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;生命周期函数--监听页面卸载&lt;/p&gt;
</description>
            </method>
            <method name="onReachBottom">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;页面上拉触底事件的处理函数&lt;/p&gt;
</description>
            </method>
            <method name="onShareAppMessage">
                <parameters>
                    <parameter name="options" type="OnShareAppMessageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="IOnShareAppMessageResult"/>
                </return-types>
                <description>&lt;p&gt;返回自定义分享信息&lt;/p&gt;
</description>
            </method>
            <method name="onPageScroll">
                <parameters>
                    <parameter name="event" type="IPageScrollEvent"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;页面滚动时触发&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IPageInstance" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="D">
                <description>&lt;p&gt;页面数据。&lt;/p&gt;
</description>
            </property>
            <property name="setData" type="SetDataMethod">
                <description>&lt;p&gt;将数据从逻辑层发送到视图层，同时改变对应的 this.data 的值&lt;/p&gt;
</description>
            </property>
            <property name="$spliceData" type="Function">
                <description>&lt;p&gt;同setData，但是相比于setData，在处理长列表的时候，其具有更高的性能&lt;/p&gt;
</description>
            </property>
            <property name="route" type="String">
                <description>&lt;p&gt;Page 路径，对应 app.json 中配置的路径值。&lt;/p&gt;
</description>
            </property>
            <property name="$batchedUpdates" type="Function">
                <description>&lt;p&gt;批量更新数据。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="my" superclass="None">
        <methods>
            <method name="createSelectorQuery">
                <parameters>
                    <parameter name="params" type="Record"/>
                </parameters>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="canIUse">
                <parameters>
                    <parameter name="query" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="Boolean"/>
                </return-types>
                <description></description>
            </method>
            <method name="reportCustomError">
                <parameters>
                    <parameter name="error" type="Error"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="call">
                <parameters>
                    <parameter name="apiName" type="String"/>
                    <parameter name="params" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="navigateTo">
                <parameters>
                    <parameter name="options" type="INavigateToOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;保留当前页面，跳转到应用内的某个指定页面，可以使用 my.navigateBack 返回到原来页面。
注意：页面最大深度为10，即可连续调用 10 次 navigateTo&lt;/p&gt;
</description>
            </method>
            <method name="redirectTo">
                <parameters>
                    <parameter name="options" type="IRedirectToOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭当前页面，跳转到应用内的某个指定页面。&lt;/p&gt;
</description>
            </method>
            <method name="navigateBack">
                <parameters>
                    <parameter name="options" type="INavigateBackOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭当前页面，返回上一级或多级页面。可通过 getCurrentPages 获取当前的页面栈信息，决定需要返回几层。&lt;/p&gt;
</description>
            </method>
            <method name="reLaunch">
                <parameters>
                    <parameter name="options" type="IRelaunchOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭当前所有页面，跳转到应用内的某个指定页面。
基础库 1.4.0+ &amp;amp; 支付宝客户端 10.1.8+ 支持&lt;/p&gt;
</description>
            </method>
            <method name="setNavigationBar">
                <parameters>
                    <parameter name="options" type="ISetNavigationBar"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置导航栏文字及样式。&lt;/p&gt;
</description>
            </method>
            <method name="showNavigationBarLoading">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;显示导航栏 loading。&lt;/p&gt;
</description>
            </method>
            <method name="hideNavigationBarLoading">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏导航栏 loading。&lt;/p&gt;
</description>
            </method>
            <method name="hideBackHome">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏TitleBar上的返回首页图标，和通用菜单中的“返回首页”功能。
返回首页功能出现时机：当用户启动小程序，若直接进入的页面不是小程序的首页，则会在左上角出现返回首页icon，若用户继续在页面中进入下一级页面，则在右上角更多菜单中，会出现“返回首页”功能。&lt;/p&gt;
</description>
            </method>
            <method name="switchTab">
                <parameters>
                    <parameter name="options" type="ISwitchTabOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转到指定 tabBar 页面，并关闭其他所有非 tabBar 页面。&lt;/p&gt;
</description>
            </method>
            <method name="hideTabBar">
                <parameters>
                    <parameter name="options" type="IHideTabBarOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库版本 1.11.0 或更高版本，低版本需要做 兼容处理。
隐藏标签页（tabbar）。&lt;/p&gt;
</description>
            </method>
            <method name="hideTabBarRedDot">
                <parameters>
                    <parameter name="options" type="IHideTabBarRedDotOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
隐藏标签页（tabbar）某一项右上角的红点。&lt;/p&gt;
</description>
            </method>
            <method name="removeTabBarBadge">
                <parameters>
                    <parameter name="options" type="IRemoveTabBarBadgeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
移除标签页（tabbar） 某一项右上角的文本。&lt;/p&gt;
</description>
            </method>
            <method name="setTabBarBadge">
                <parameters>
                    <parameter name="options" type="ISetTabBarBadgeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 及以上版本。
为标签页（tabbar）某一项的右上角添加文本。&lt;/p&gt;
</description>
            </method>
            <method name="setTabBarItem">
                <parameters>
                    <parameter name="options" type="ISetTabBarItemOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
动态设置标签页（tabbar）某一项的内容。&lt;/p&gt;
</description>
            </method>
            <method name="setTabBarStyle">
                <parameters>
                    <parameter name="options" type="ISetTabBarStyleOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
动态设置标签页（tabbar）的整体样式，如文字颜色、标签背景色、标签边框颜色等。&lt;/p&gt;
</description>
            </method>
            <method name="showTabBar">
                <parameters>
                    <parameter name="options" type="IShowTabBarOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
显示标签页（tabbar）。&lt;/p&gt;
</description>
            </method>
            <method name="showTabBarRedDot">
                <parameters>
                    <parameter name="options" type="IShowTabBarRedDotOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;版本要求：基础库 1.11.0 或更高版本，若版本较低，建议做 兼容处理。
显示标签页（tabbar）某一项的右上角的红点。&lt;/p&gt;
</description>
            </method>
            <method name="stopPullDownRefresh">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止当前页面的下拉刷新。&lt;/p&gt;
</description>
            </method>
            <method name="startPullDownRefresh">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;开始下拉刷新。代码执行后触发下拉刷新动画，效果与用户手动下拉刷新保持一致。&lt;/p&gt;
</description>
            </method>
            <method name="choosePhoneContact">
                <parameters>
                    <parameter name="options" type="IChoosePhoneContactOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;选择本地系统通信录中某个联系人的电话。&lt;/p&gt;
</description>
            </method>
            <method name="chooseAlipayContact">
                <parameters>
                    <parameter name="options" type="IChooseAlipayContactOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="chooseContact">
                <parameters>
                    <parameter name="options" type="IChooseContactOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;唤起选人组件，默认只包含支付宝联系人，可以通过修改参数包含手机通讯录联系人或者双向通讯录联系人。&lt;/p&gt;
</description>
            </method>
            <method name="chooseCity">
                <parameters>
                    <parameter name="options" type="IChooseCityOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开城市选择列表。
如果用户没有选择任何城市直接点击了返回，将不会触发回调函数。&lt;/p&gt;
</description>
            </method>
            <method name="datePicker">
                <parameters>
                    <parameter name="options" type="IDatePickerOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开日期选择列表&lt;/p&gt;
</description>
            </method>
            <method name="createAnimation">
                <parameters>
                    <parameter name="options" type="ICreateAnimationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;创建动画实例 animation。调用实例的方法来描述动画，最后通过动画实例的export方法将动画数据导出并传递给组件的animation属性。
注意: export 方法调用后会清掉之前的动画操作&lt;/p&gt;
</description>
            </method>
            <method name="createCanvasContext">
                <parameters>
                    <parameter name="canvasId" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="ICanvasContext"/>
                </return-types>
                <description>&lt;p&gt;创建 canvas 绘图上下文。
该绘图上下文只作用于对应 canvasId 的 &lt;canvas/&gt;&lt;/p&gt;
</description>
            </method>
            <method name="createMapContext">
                <parameters>
                    <parameter name="mapId" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="IMapContext"/>
                </return-types>
                <description>&lt;p&gt;创建并返回一个 map 上下文对象 mapContext。&lt;/p&gt;
</description>
            </method>
            <method name="hideKeyboard">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏键盘。&lt;/p&gt;
</description>
            </method>
            <method name="pageScrollTo">
                <parameters>
                    <parameter name="options" type="IPageScrollToOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;滚动到页面的目标位置。&lt;/p&gt;
</description>
            </method>
            <method name="multiLevelSelect">
                <parameters>
                    <parameter name="options" type="IMultiLevelSelectOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;级联选择功能主要使用在于多级关联数据选择，比如说省市区的信息选择。&lt;/p&gt;
</description>
            </method>
            <method name="showToast">
                <parameters>
                    <parameter name="options" type="IShowToastOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;显示一个弱提示，可选择多少秒之后消失。&lt;/p&gt;
</description>
            </method>
            <method name="hideToast">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏消息提示框&lt;/p&gt;
</description>
            </method>
            <method name="alert">
                <parameters>
                    <parameter name="options" type="IAlertOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;alert 警告框&lt;/p&gt;
</description>
            </method>
            <method name="confirm">
                <parameters>
                    <parameter name="options" type="IConfirmOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;confirm 确认框。&lt;/p&gt;
</description>
            </method>
            <method name="prompt">
                <parameters>
                    <parameter name="options" type="IPromptOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="showLoading">
                <parameters>
                    <parameter name="options" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="Promise"/>
                </return-types>
                <description>&lt;p&gt;显示消息提示框&lt;/p&gt;
</description>
            </method>
            <method name="hideLoading">
                <parameters>
                    <parameter name="options" type="IHideLoadingOptions"/>
                </parameters>
                <return-types>
                    <return-type type="Promise"/>
                </return-types>
                <description>&lt;p&gt;显示消息提示框&lt;/p&gt;
</description>
            </method>
            <method name="showActionSheet">
                <parameters>
                    <parameter name="options" type="IShowActionSheetOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;显示操作菜单。&lt;/p&gt;
</description>
            </method>
            <method name="optionsSelect">
                <parameters>
                    <parameter name="options" type="IOptionsSelectOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;类似于 safari 原生 select 的组件，但是功能更加强大，一般用来替代 select，或者 2 级数据的选择。
注意不支持 2 级数据之间的联动。&lt;/p&gt;
</description>
            </method>
            <method name="getAuthCode">
                <parameters>
                    <parameter name="options" type="IGetAuthCodeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取授权码。&lt;/p&gt;
</description>
            </method>
            <method name="getAuthUserInfo">
                <parameters>
                    <parameter name="options" type="IGetAuthUserInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;客户端获取会员信息。&lt;/p&gt;
</description>
            </method>
            <method name="getPhoneNumber">
                <parameters>
                    <parameter name="options" type="IGetPhoneNumberOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取支付宝用户绑定的手机号&lt;/p&gt;
</description>
            </method>
            <method name="tradePay">
                <parameters>
                    <parameter name="options" type="ITradePayOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;发起支付&lt;/p&gt;
</description>
            </method>
            <method name="paySignCenter">
                <parameters>
                    <parameter name="options" type="IPaySignCenterOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="openCardList">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开支付宝卡列表。&lt;/p&gt;
</description>
            </method>
            <method name="openMerchantCardList">
                <parameters>
                    <parameter name="params" type="IOpenMerchantCardListOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某个商户的卡列表&lt;/p&gt;
</description>
            </method>
            <method name="openCardDetail">
                <parameters>
                    <parameter name="params" type="IOpenCardDetailOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某张卡的详情页&lt;/p&gt;
</description>
            </method>
            <method name="openVoucherList">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开支付宝券列表&lt;/p&gt;
</description>
            </method>
            <method name="openMerchantVoucherList">
                <parameters>
                    <parameter name="params" type="IOpenMerchantVoucherListOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某个商户的券列表&lt;/p&gt;
</description>
            </method>
            <method name="openVoucherDetail">
                <parameters>
                    <parameter name="params" type="OpenDetailOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某张券的详情页（非口碑）&lt;/p&gt;
</description>
            </method>
            <method name="openKBVoucherDetail">
                <parameters>
                    <parameter name="params" type="OpenDetailOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某张券的详情页（口碑）&lt;/p&gt;
</description>
            </method>
            <method name="openTicketList">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开支付宝票列表。&lt;/p&gt;
</description>
            </method>
            <method name="openMerchantTicketList">
                <parameters>
                    <parameter name="params" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开某个商户的票列表&lt;/p&gt;
</description>
            </method>
            <method name="openTicketDetail">
                <parameters>
                    <parameter name="params" type="OpenDetailOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开当前用户的某张票的详情页&lt;/p&gt;
</description>
            </method>
            <method name="addCardAuth">
                <parameters>
                    <parameter name="options" type="IAddCardAuthOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;小程序唤起会员开卡授权页面&lt;/p&gt;
</description>
            </method>
            <method name="startZMVerify">
                <parameters>
                    <parameter name="options" type="IStartZMVerifyOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;芝麻认证接口，调用此接口可以唤起芝麻认证页面并进行人脸身份验证。&lt;/p&gt;
&lt;p&gt;需要通过蚂蚁开发平台，调用certification.initialize接口进行&lt;a href="https://docs.alipay.com/zmxy/271/105914"&gt;认证初始化&lt;/a&gt;。获得biz_no 后，方能通过以下接口激活芝麻认证小程序。&lt;/p&gt;
</description>
            </method>
            <method name="textRiskIdentification">
                <parameters>
                    <parameter name="options" type="ITextRiskIdentificationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;文本风险识别， 支付宝客户端10.1.10及以上版本支持。详细接入参考&lt;a href="https://docs.alipay.com/mini/introduce/text-identification"&gt;指引&lt;/a&gt;。&lt;/p&gt;
</description>
            </method>
            <method name="navigateToMiniProgram">
                <parameters>
                    <parameter name="options" type="INavigateToMiniProgram"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转到其他小程序。&lt;/p&gt;
</description>
            </method>
            <method name="navigateBackMiniProgram">
                <parameters>
                    <parameter name="options" type="INavigateBackMiniProgram"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转回上一个小程序，只有当另一个小程序跳转到当前小程序时才会能调用成功&lt;/p&gt;
</description>
            </method>
            <method name="createWebViewContext">
                <parameters>
                    <parameter name="webviewId" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="IWebViewContext"/>
                </return-types>
                <description>&lt;p&gt;创建并返回 web-view 上下文 webViewContext 对象。&lt;/p&gt;
</description>
            </method>
            <method name="chooseImage">
                <parameters>
                    <parameter name="options" type="IChooseImageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;从本地相册选择图片或使用相机拍照。&lt;/p&gt;
</description>
            </method>
            <method name="previewImage">
                <parameters>
                    <parameter name="options" type="IPreviewImageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;预览图片。&lt;/p&gt;
</description>
            </method>
            <method name="getImageInfo">
                <parameters>
                    <parameter name="options" type="IGetImageInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取图片信息&lt;/p&gt;
</description>
            </method>
            <method name="saveImage">
                <parameters>
                    <parameter name="options" type="ISaveImageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;保存在线图片到手机相册。&lt;/p&gt;
</description>
            </method>
            <method name="compressImage">
                <parameters>
                    <parameter name="options" type="ICompressImageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;压缩图片。&lt;/p&gt;
</description>
            </method>
            <method name="setStorage">
                <parameters>
                    <parameter name="options" type="ISetStorageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持内嵌webview的存储与小程序存储隔离，内嵌webview中指定key存储数据不会覆盖小程序自身相同key对应的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：单条数据转换成字符串后，字符串长度最大200*1024。同一个支付宝用户，同一个小程序缓存总上限为10MB&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            </method>
            <method name="setStorageSync">
                <parameters>
                    <parameter name="options" type="ISetStorageSyncOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;同步将数据存储在本地缓存中指定的 key 中。&lt;/p&gt;
</description>
            </method>
            <method name="getStorage">
                <parameters>
                    <parameter name="option" type="IGetStorageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取缓存数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持内嵌webview内缓与小程序缓存隔离，获取内嵌webview指定key的缓存不会同时返回小程序相同key下的缓存数据&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            </method>
            <method name="getStorageSync">
                <parameters>
                    <parameter name="options" type="IGetStorageSyncOptions"/>
                </parameters>
                <return-types>
                    <return-type type="IGetStorageSuccessResult"/>
                </return-types>
                <description>&lt;p&gt;同步获取缓存数据。&lt;/p&gt;
</description>
            </method>
            <method name="removeStorage">
                <parameters>
                    <parameter name="options" type="IRemoveStorageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;删除缓存数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;移除内嵌webview的存储数据时不会移除当前小程序的存储数据&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            </method>
            <method name="removeStorageSync">
                <parameters>
                    <parameter name="options" type="IRemoveStorageSyncOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;同步删除缓存数据。&lt;/p&gt;
</description>
            </method>
            <method name="clearStorage">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;清除本地数据缓存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;清空内嵌内嵌webview的存储时不会同时清空当前小程序本身的存储数据&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            </method>
            <method name="clearStorageSync">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;同步清除本地数据缓存。&lt;/p&gt;
</description>
            </method>
            <method name="getStorageInfo">
                <parameters>
                    <parameter name="options" type="IGetStorageInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;异步获取当前storage的相关信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在内嵌webview内获取当前storage的相关信息不会获取到当前小程序storage的相关信息&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            </method>
            <method name="getStorageInfoSync">
                <parameters/>
                <return-types>
                    <return-type type="IStorageInfo"/>
                </return-types>
                <description>&lt;p&gt;同步获取当前storage的相关信息。&lt;/p&gt;
</description>
            </method>
            <method name="saveFile">
                <parameters>
                    <parameter name="options" type="ISaveFileOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;保存文件到本地。（本地文件大小总容量限制：10M）&lt;/p&gt;
</description>
            </method>
            <method name="getSavedFileList">
                <parameters>
                    <parameter name="options" type="IGetSavedFileListOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取本地已保存的文件列表&lt;/p&gt;
</description>
            </method>
            <method name="getSavedFileInfo">
                <parameters>
                    <parameter name="options" type="IGetSavedFileInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取本地文件的文件信息&lt;/p&gt;
</description>
            </method>
            <method name="removeSavedFile">
                <parameters>
                    <parameter name="options" type="IRemoveSavedFileOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;删除本地存储的文件&lt;/p&gt;
</description>
            </method>
            <method name="getFileInfo">
                <parameters>
                    <parameter name="options" type="IGetFileInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="getLocation">
                <parameters>
                    <parameter name="options" type="IGetLocationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取用户当前的地理位置信息&lt;/p&gt;
</description>
            </method>
            <method name="chooseLocation">
                <parameters>
                    <parameter name="options" type="IChooseLocationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;使用支付宝内置地图选择地理位置。&lt;/p&gt;
</description>
            </method>
            <method name="openLocation">
                <parameters>
                    <parameter name="options" type="IOpenLocationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;使用支付宝内置地图查看位置&lt;/p&gt;
</description>
            </method>
            <method name="httpRequest">
                <parameters>
                    <parameter name="options" type="IHttpRequestOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;小程序网络请求&lt;/p&gt;
</description>
            </method>
            <method name="request">
                <parameters>
                    <parameter name="options" type="IHttpRequestOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;小程序网络请求&lt;/p&gt;
</description>
            </method>
            <method name="uploadFile">
                <parameters>
                    <parameter name="options" type="IUploadFileOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将本地资源上传到开发者服务器。
如页面通过 &lt;a href="#my.chooseImage"&gt;my.chooseImage&lt;/a&gt; 等接口获取到一个本地资源的临时文件路径后，可通过此接口将本地资源上传到指定服务器。
客户端发起一个 HTTPS POST 请求，其中 &lt;code&gt;Content-Type&lt;/code&gt; 为 &lt;code&gt;multipart/form-data&lt;/code&gt; 。&lt;/p&gt;
</description>
            </method>
            <method name="downloadFile">
                <parameters>
                    <parameter name="options" type="IDownloadFileOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;下载文件资源到本地。
客户端直接发起一个 HTTP GET 请求，返回文件的本地临时路径。&lt;/p&gt;
</description>
            </method>
            <method name="connectSocket">
                <parameters>
                    <parameter name="options" type="IConnectSocketOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;创建一个 &lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket?t=1477656499061"&gt;WebSocket&lt;/a&gt; 连接；
&lt;strong&gt;一个支付宝小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接&lt;/strong&gt;。&lt;/p&gt;
</description>
            </method>
            <method name="onSocketOpen">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听WebSocket连接打开事件。&lt;/p&gt;
</description>
            </method>
            <method name="onSocketError">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听WebSocket错误。&lt;/p&gt;
</description>
            </method>
            <method name="sendSocketMessage">
                <parameters>
                    <parameter name="options" type="ISendSocketMessageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;通过 WebSocket 连接发送数据，需要先 &lt;a href="#my.connectSocket"&gt;my.connectSocket&lt;/a&gt;，并在 &lt;a href="#my.onSocketOpen"&gt;my.onSocketOpen&lt;/a&gt; 回调之后才能发送。&lt;/p&gt;
</description>
            </method>
            <method name="onSocketMessage">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听WebSocket接受到服务器的消息事件。&lt;/p&gt;
</description>
            </method>
            <method name="closeSocket">
                <parameters>
                    <parameter name="options" type="ICloseSocketOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭WebSocket连接。&lt;/p&gt;
</description>
            </method>
            <method name="onSocketClose">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听WebSocket关闭。&lt;/p&gt;
</description>
            </method>
            <method name="offSocketClose">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;取消监听WebSocket关闭。&lt;/p&gt;
</description>
            </method>
            <method name="getNetworkType">
                <parameters>
                    <parameter name="options" type="IGetNetworkTypeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取当前网络状态。&lt;/p&gt;
</description>
            </method>
            <method name="onNetworkStatusChange">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;开始网络状态变化的监听&lt;/p&gt;
</description>
            </method>
            <method name="offNetworkStatusChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;取消网络状态变化的监听&lt;/p&gt;
</description>
            </method>
            <method name="getSystemInfo">
                <parameters>
                    <parameter name="options" type="IGetSystemInfoOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取系统信息。&lt;/p&gt;
</description>
            </method>
            <method name="getSystemInfoSync">
                <parameters/>
                <return-types>
                    <return-type type="IGetSystemInfoSuccessResult"/>
                </return-types>
                <description>&lt;p&gt;返回值同 getSystemInfo success 回调参数&lt;/p&gt;
</description>
            </method>
            <method name="getClipboard">
                <parameters>
                    <parameter name="options" type="IClipboardOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取剪贴板数据。&lt;/p&gt;
</description>
            </method>
            <method name="setClipboard">
                <parameters>
                    <parameter name="options" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置剪贴板数据。&lt;/p&gt;
</description>
            </method>
            <method name="watchShake">
                <parameters>
                    <parameter name="options" type="IWatchShakeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;摇一摇功能。每次调用API，在摇一摇手机后触发回调，如需再次监听需要再次调用这个API。&lt;/p&gt;
</description>
            </method>
            <method name="vibrate">
                <parameters>
                    <parameter name="options" type="IVibrateOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用振动功能。&lt;/p&gt;
</description>
            </method>
            <method name="vibrateLong">
                <parameters>
                    <parameter name="options" type="IVibrateLongOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;较长时间的振动 (400ms)。&lt;/p&gt;
</description>
            </method>
            <method name="vibrateShort">
                <parameters>
                    <parameter name="options" type="IVibrateShortOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;较短时间的振动 (40ms)。&lt;/p&gt;
</description>
            </method>
            <method name="onAccelerometerChange">
                <parameters>
                    <parameter name="cb" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听加速度数据，回调间隔为500ms，接口调用后会自动开始监听，可使用my.offAccelermeterChange()停止监听。&lt;/p&gt;
</description>
            </method>
            <method name="offAccelerometerChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止监听加速度数据。&lt;/p&gt;
</description>
            </method>
            <method name="onGyroscopeChange">
                <parameters>
                    <parameter name="cb" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听陀螺仪数据变化事件，接口调用后会自动开始监听，回调间隔为500ms，可使用my.offGyroscopeChange()停止监听。&lt;/p&gt;
</description>
            </method>
            <method name="offGyroscopeChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止监听陀螺仪数据。&lt;/p&gt;
</description>
            </method>
            <method name="onCompassChange">
                <parameters>
                    <parameter name="cb" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听罗盘数据，接口调用后会自动开始监听，回调间隔为500ms，可使用my.offCompassChange停止监听。&lt;/p&gt;
</description>
            </method>
            <method name="offCompassChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止监听罗盘数据。&lt;/p&gt;
</description>
            </method>
            <method name="makePhoneCall">
                <parameters>
                    <parameter name="options" type="IMakePhoneCallOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;拨打电话。&lt;/p&gt;
</description>
            </method>
            <method name="getServerTime">
                <parameters>
                    <parameter name="options" type="IGetServerTimeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取当前服务器时间的毫秒数。&lt;/p&gt;
</description>
            </method>
            <method name="onUserCaptureScreen">
                <parameters>
                    <parameter name="cb" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;用于监听用户发起的主动截屏事件，可以接收到系统以及第三方截屏工具的截屏事件通知。&lt;/p&gt;
</description>
            </method>
            <method name="offUserCaptureScreen">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;取消监听截屏事件。一般需要与 my.onUserCaptureScreen 成对出现。&lt;/p&gt;
</description>
            </method>
            <method name="setKeepScreenOn">
                <parameters>
                    <parameter name="options" type="ISetKeepScreenOnOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置是否保持屏幕长亮状态。仅在当前小程序生效，离开小程序后失效。&lt;/p&gt;
</description>
            </method>
            <method name="getScreenBrightness">
                <parameters>
                    <parameter name="options" type="IGetScreenBrightnessOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取屏幕亮度&lt;/p&gt;
</description>
            </method>
            <method name="setScreenBrightness">
                <parameters>
                    <parameter name="options" type="ISetScreenBrightnessOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置屏幕亮度&lt;/p&gt;
</description>
            </method>
            <method name="openSetting">
                <parameters>
                    <parameter name="options" type="IOpenSettingOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开小程序设置界面，返回用户权限设置的结果；设置界面只会出现小程序已经向用户请求过的权限。&lt;/p&gt;
</description>
            </method>
            <method name="getSetting">
                <parameters>
                    <parameter name="options" type="IGetSettingOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取用户的当前设置，返回值中只会出现小程序已经向用户请求过的权限。&lt;/p&gt;
</description>
            </method>
            <method name="addPhoneContact">
                <parameters>
                    <parameter name="options" type="IAddPhoneContactOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;用户可以选择将该表单以“创建新联系人”或“添加到现有联系人”的方式，写入到手机系统的通讯录。&lt;/p&gt;
</description>
            </method>
            <method name="showAuthGuide">
                <parameters>
                    <parameter name="options" type="IShowAuthGuideOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;通过权限引导模块以图文等形式向用户弹出 Dialog，引导用户打开相应的权限。
权限引导的核心是引导而非权限判断，调用时机应该在业务方确认所需权限被限制的时候；此外权限引导弹框受疲劳度等因素控制。&lt;/p&gt;
</description>
            </method>
            <method name="scan">
                <parameters>
                    <parameter name="options" type="IScanOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用扫一扫功能。&lt;/p&gt;
</description>
            </method>
            <method name="openBluetoothAdapter">
                <parameters>
                    <parameter name="options" type="IOpenBluetoothAdapterOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;初始化小程序蓝牙模块，生效周期为调用 &lt;a href="#my.openBluetoothAdapter"&gt;my.openBluetoothAdapter&lt;/a&gt; 至调用 &lt;a href="#my.closeBluetoothAdapter"&gt;my.closeBluetoothAdapter&lt;/a&gt; 或小程序被销毁为止。
在小程序蓝牙适配器模块生效期间，开发者可以正常调用下面的小程序API，并会收到蓝牙模块相关的 on 事件回调。&lt;/p&gt;
</description>
            </method>
            <method name="closeBluetoothAdapter">
                <parameters>
                    <parameter name="options" type="ICloseBluetoothAdapterOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭本机蓝牙模块。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tip: 调用该方法将断开所有已建立的蓝牙连接并释放系统资源。&lt;/li&gt;
&lt;li&gt;tip: 建议在结束小程序蓝牙流程时调用，与 my.openBluetoothAdapter 成对调用。&lt;/li&gt;
&lt;li&gt;tip: 调用 my.closeBluetoothAdapter 释放资源为异步操作，不建议使用 my.closeBluetoothAdapter 和 my.openBluetoothAdapter 作为异常处理流程（相当于先关闭再开启，重新初始化，效率低，易发生线程同步问题）&lt;/li&gt;
&lt;/ol&gt;
</description>
            </method>
            <method name="getBluetoothAdapterState">
                <parameters>
                    <parameter name="options" type="IGetBluetoothAdapterStateOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取本机蓝牙模块状态。&lt;/p&gt;
</description>
            </method>
            <method name="startBluetoothDevicesDiscovery">
                <parameters>
                    <parameter name="options" type="IStartBluetoothDevicesDiscoveryOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;开始搜寻附近的蓝牙外围设备。搜索结果将在 &lt;a href="#my.onBluetoothDeviceFound"&gt;my.onBluetoothDeviceFound&lt;/a&gt; 事件中返回。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 该操作比较耗费系统资源，请在搜索并连接到设备后调用 stop 方法停止搜索。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="stopBluetoothDevicesDiscovery">
                <parameters>
                    <parameter name="options" type="IStopBluetoothDevicesDiscoveryOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止搜寻附近的蓝牙外围设备。&lt;/p&gt;
</description>
            </method>
            <method name="getBluetoothDevices">
                <parameters>
                    <parameter name="options" type="IGetBluetoothDevicesOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取所有已发现的蓝牙设备，包括已经和本机处于连接状态的设备。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 模拟器可能无法获取 advertisData 及 RSSI，请使用真机调试&lt;/li&gt;
&lt;li&gt;tip: 开发者工具和 Android 上获取到的deviceId为设备 MAC 地址，iOS 上则为设备 uuid; 因此 deviceId 不能硬编码到代码中，需要分平台处理，iOS可根据设备属性（localName/advertisData/manufacturerData 等属性）进行动态匹配。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="getConnectedBluetoothDevices">
                <parameters>
                    <parameter name="options" type="IGetConnectedBluetoothDevicesOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取处于已连接状态的设备。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 如果传递的 services 为空，则返回所有的已经连接的设备。&lt;/li&gt;
&lt;li&gt;tip: Android 上获取到的deviceId为设备 MAC 地址，iOS 上则为设备 uuid。因此deviceId不能硬编码到代码中，需要区分处理。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="connectBLEDevice">
                <parameters>
                    <parameter name="options" type="IConnectBLEDeviceOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;连接低功耗蓝牙设备。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 若小程序在之前已有搜索过某个蓝牙设备，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需进行搜索操作。&lt;/li&gt;
&lt;li&gt;tip: 若指定的蓝牙设备已经连接，重复连接直接返回成功。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="disconnectBLEDevice">
                <parameters>
                    <parameter name="options" type="IDisconnectBLEDeviceOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;断开与低功耗蓝牙设备的连接。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 蓝牙连接随时可能断开，建议监听 &lt;a href="#my.onBLEConnectionStateChanged"&gt;my.onBLEConnectionStateChanged&lt;/a&gt; 回调事件，当蓝牙设备断开时按需执行重连操作&lt;/li&gt;
&lt;li&gt;tip: 若对未连接的设备或已断开连接的设备调用数据读写操作的接口，会返回10006错误，详见错误码，建议进行重连操作&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="writeBLECharacteristicValue">
                <parameters>
                    <parameter name="options" type="IWriteBLECharacteristicValueOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;向低功耗蓝牙设备特征值中写入数据。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 设备的特征值必须支持 write 才可以成功调用，具体参照 characteristic 的 properties 属性。&lt;/li&gt;
&lt;li&gt;tip: 写入的二进制数据需要进行 hex 编码。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="readBLECharacteristicValue">
                <parameters>
                    <parameter name="options" type="IReadBLECharacteristicValueOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;读取低功耗蓝牙设备特征值中的数据。调用后在 &lt;a href="#my.onBLECharacteristicValueChange"&gt;my.onBLECharacteristicValueChange()&lt;/a&gt; 事件中接收数据返回。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 设备的特征值必须支持read才可以成功调用，具体参照 characteristic 的 properties 属性&lt;/li&gt;
&lt;li&gt;tip: 并行多次调用读写接口存在读写失败的可能性。&lt;/li&gt;
&lt;li&gt;tip: 如果读取超时，错误码 10015，&lt;a href="#my.onBLECharacteristicValueChange"&gt;my.onBLECharacteristicValueChange&lt;/a&gt; 接口之后可能返回数据，需要接入方酌情处理。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="notifyBLECharacteristicValueChange">
                <parameters>
                    <parameter name="options" type="INotifyBLECharacteristicValueChangeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;启用低功耗蓝牙设备特征值变化时的 notify 功能。注意：设备的特征值必须支持 notify/indicate 才可以成功调用，具体参照 characteristic 的 properties 属性 另外，必须先启用 notify 才能监听到设备 characteristicValueChange 事件。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 订阅操作成功后需要设备主动更新特征值的 value，才会触发 my.onBLECharacteristicValueChange 。&lt;/li&gt;
&lt;li&gt;tip: 订阅方式效率比较高，推荐使用订阅代替 read 方式。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="getBLEDeviceServices">
                <parameters>
                    <parameter name="options" type="IGetBLEDeviceServicesOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取蓝牙设备所有 service（服务）&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 建立连接后先执行 my.getBLEDeviceServices 与 my.getBLEDeviceCharacteristics 后再进行与蓝牙设备的数据交互。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="getBLEDeviceCharacteristics">
                <parameters>
                    <parameter name="options" type="IGetBLEDeviceCharacteristicsOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取蓝牙设备所有 characteristic（特征值）&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 建立连接后先执行 my.getBLEDeviceServices 与 my.getBLEDeviceCharacteristics 后再进行与蓝牙设备的数据交互。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="onBluetoothDeviceFound">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;搜索到新的蓝牙设备时触发此事件。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 模拟器可能无法获取 advertisData 及 RSSI ，请使用真机调试。&lt;/li&gt;
&lt;li&gt;tip: 开发者工具和 Android 上获取到的deviceId为设备 MAC 地址，iOS 上则为设备 uuid。因此deviceId不能硬编码到代码中，需要分平台处理，iOS可根据设备属性（localName/advertisData/manufacturerData等）进行动态匹配。&lt;/li&gt;
&lt;li&gt;tip: 若在 my.onBluetoothDeviceFound 回调中包含了某个蓝牙设备，则此设备会添加到 my.getBluetoothDevices 接口获取到的数组中。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="offBluetoothDeviceFound">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;移除寻找到新的蓝牙设备事件的监听。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 为防止多次注册事件监听导致一次事件多次回调，建议每次调用on方法监听事件之前，先调用off方法，关闭之前的事件监听。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="onBLECharacteristicValueChange">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听低功耗蓝牙设备的特征值变化的事件。&lt;/p&gt;
</description>
            </method>
            <method name="offBLECharacteristicValueChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;移除低功耗蓝牙设备的特征值变化事件的监听。&lt;/p&gt;
</description>
            </method>
            <method name="onBLEConnectionStateChanged">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听低功耗蓝牙连接的错误事件，包括设备丢失，连接异常断开等。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 为防止多次注册事件监听导致一次事件多次回调，建议每次调用on方法监听事件之前，先调用off方法，关闭之前的事件监听。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="offBLEConnectionStateChanged">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;移除低功耗蓝牙连接状态变化事件的监听。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 为防止多次注册事件监听导致一次事件多次回调，建议每次调用on方法监听事件之前，先调用off方法，关闭之前的事件监听。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="onBluetoothAdapterStateChange">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听本机蓝牙状态变化的事件。&lt;/p&gt;
</description>
            </method>
            <method name="offBluetoothAdapterStateChange">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;移除本机蓝牙状态变化的事件的监听。&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: 为防止多次注册事件监听导致一次事件多次回调，建议每次调用on方法监听事件之前，先调用off方法，关闭之前的事件监听。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="startBeaconDiscovery">
                <parameters>
                    <parameter name="options" type="IStartBeaconDiscoveryOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;开始搜索附近的 iBeacon 设备&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: uuid1、uuid2 为目标 iBeacon 的UUID，可从硬件厂商获取，如果为空，无法搜索到 iBeacon&lt;/li&gt;
&lt;li&gt;tip: iBeacon 需要位置权限，iOS 11 之前需要蓝牙开关打开，iOS 11 以后，需要 设置-&amp;gt;蓝牙-&amp;gt;开关开启(控制中心的蓝牙开关不影响 iBeacon 使用)&lt;/li&gt;
&lt;li&gt;tip: 推荐在 my.onBeaconUpdate 回调中处理发现到的iBeacon设备信息&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="stopBeaconDiscovery">
                <parameters>
                    <parameter name="options" type="IStopBeaconDiscoveryOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;停止搜索附近的 iBeacon 设备&lt;/p&gt;
</description>
            </method>
            <method name="getBeacons">
                <parameters>
                    <parameter name="options" type="IGetBeaconsOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取已经搜索到的 iBeacon 设备&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bug: Android 支付宝客户端 10.1.28 及以前的版本该接口返回的 rssi 值不能动态更新，推荐使用事件触发方式&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="onBeaconUpdate">
                <parameters>
                    <parameter name="options" type="IOnBeaconUpdateOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听 iBeacon 设备的更新事件&lt;/p&gt;
</description>
            </method>
            <method name="onBeaconServiceChange">
                <parameters>
                    <parameter name="options" type="IOnBeaconServiceChangeOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;监听 iBeacon 服务的状态变化&lt;/p&gt;
&lt;p&gt;Bug &amp;amp; Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tip: iOS 11及以后版本 “控制中心蓝牙开关” 和 “设置-&amp;gt;蓝牙-&amp;gt;开关” 分离，控制中心蓝牙开关不再影响 iBeacon 使用，但是 my.onBeaconServiceChange 事件仍然会回调，建议iOS 11以后该事件回调以后继续等待 my.onBeaconUpdate 以确认是否提示用户开启蓝牙。&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="rsa">
                <parameters>
                    <parameter name="options" type="IRSAOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;非对称加密。&lt;/p&gt;
&lt;p&gt;注：加密与解密过程分别放置在客户端与服务端，且私钥放在服务端，私钥放在客户端易泄露将导致安全问题。&lt;/p&gt;
</description>
            </method>
            <method name="hideShareMenu">
                <parameters>
                    <parameter name="options" type="IHideShareMenuOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏分享按钮。&lt;/p&gt;
</description>
            </method>
            <method name="hideAddToDesktopMenu">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏当前页面通用菜单中的添加到桌面功能&lt;/p&gt;
</description>
            </method>
            <method name="hideAllAddToDesktopMenu">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏所有页面的通用菜单中的添加到桌面功能&lt;/p&gt;
</description>
            </method>
            <method name="hideFavoriteMenu">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏当前页面的通用菜单中的收藏按钮&lt;/p&gt;
</description>
            </method>
            <method name="hideAllFavoriteMenu">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;隐藏所有页面的通用菜单中的收藏功能&lt;/p&gt;
</description>
            </method>
            <method name="getRunScene">
                <parameters>
                    <parameter name="res" type="IGetRunSceneOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取当前小程序的运行版本&lt;/p&gt;
</description>
            </method>
            <method name="reportAnalytics">
                <parameters>
                    <parameter name="eventName" type="String"/>
                    <parameter name="data" type="Record"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;自定义分析数据的上报接口。使用前需要在小程序管理后台的事件管理中新建事件，并配置好事件名和字段。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="IBoundingClientRect" type="IBoundingClientRect" scope="static">
                <description>&lt;p&gt;节点查询 &lt;a href="https://docs.alipay.com/mini/api/selector-query"&gt;https://docs.alipay.com/mini/api/selector-query&lt;/a&gt;&lt;/p&gt;
</description>
            </property>
            <property name="ISelectorQuery" type="ISelectorQuery" scope="static">
                <description></description>
            </property>
            <property name="INavigateBaseCallbackOptions" type="INavigateBaseCallbackOptions" scope="static">
                <description></description>
            </property>
            <property name="INavigateToOptions" type="INavigateToOptions" scope="static">
                <description></description>
            </property>
            <property name="IRedirectToOptions" type="IRedirectToOptions" scope="static">
                <description></description>
            </property>
            <property name="INavigateBackOptions" type="INavigateBackOptions" scope="static">
                <description></description>
            </property>
            <property name="IRelaunchOptions" type="IRelaunchOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetNavigationBar" type="ISetNavigationBar" scope="static">
                <description></description>
            </property>
            <property name="ISwitchTabOptions" type="ISwitchTabOptions" scope="static">
                <description></description>
            </property>
            <property name="IHideTabBarOptions" type="IHideTabBarOptions" scope="static">
                <description></description>
            </property>
            <property name="IHideTabBarRedDotOptions" type="IHideTabBarRedDotOptions" scope="static">
                <description></description>
            </property>
            <property name="IRemoveTabBarBadgeOptions" type="IRemoveTabBarBadgeOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetTabBarBadgeOptions" type="ISetTabBarBadgeOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetTabBarItemOptions" type="ISetTabBarItemOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetTabBarStyleOptions" type="ISetTabBarStyleOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowTabBarOptions" type="IShowTabBarOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowTabBarRedDotOptions" type="IShowTabBarRedDotOptions" scope="static">
                <description></description>
            </property>
            <property name="IChoosePhoneContactSuccessResult" type="IChoosePhoneContactSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IChoosePhoneContactFailResult" type="IChoosePhoneContactFailResult" scope="static">
                <description></description>
            </property>
            <property name="IChoosePhoneContactOptions" type="IChoosePhoneContactOptions" scope="static">
                <description></description>
            </property>
            <property name="IChooseAlipayContactSuccessResult" type="IChooseAlipayContactSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IChooseAlipayContactFailResult" type="IChooseAlipayContactFailResult" scope="static">
                <description></description>
            </property>
            <property name="IChooseAlipayContactOptions" type="IChooseAlipayContactOptions" scope="static">
                <description></description>
            </property>
            <property name="IChooseContactSuccessResult" type="IChooseContactSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IChooseContactOptions" type="IChooseContactOptions" scope="static">
                <description></description>
            </property>
            <property name="IChooseCitySuccessResult" type="IChooseCitySuccessResult" scope="static">
                <description></description>
            </property>
            <property name="ICity" type="ICity" scope="static">
                <description></description>
            </property>
            <property name="IChooseCityOptions" type="IChooseCityOptions" scope="static">
                <description></description>
            </property>
            <property name="IDatePickerFailResult" type="IDatePickerFailResult" scope="static">
                <description></description>
            </property>
            <property name="IDatePickerSuccessResult" type="IDatePickerSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IDatePickerOptions" type="IDatePickerOptions" scope="static">
                <description></description>
            </property>
            <property name="IAnimationInfo" type="IAnimationInfo" scope="static">
                <description></description>
            </property>
            <property name="IAnimation" type="IAnimation" scope="static">
                <description></description>
            </property>
            <property name="ICreateAnimationOptions" type="ICreateAnimationOptions" scope="static">
                <description></description>
            </property>
            <property name="ILinearGradient" type="ILinearGradient" scope="static">
                <description></description>
            </property>
            <property name="ICircularGradient" type="ICircularGradient" scope="static">
                <description></description>
            </property>
            <property name="IGetImageDataSuccessResult" type="IGetImageDataSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetImageDataOptions" type="IGetImageDataOptions" scope="static">
                <description></description>
            </property>
            <property name="IPutImageDataOptions" type="IPutImageDataOptions" scope="static">
                <description></description>
            </property>
            <property name="ICanvasToTempFilePathOptions" type="ICanvasToTempFilePathOptions" scope="static">
                <description></description>
            </property>
            <property name="ICanvasContext" type="ICanvasContext" scope="static">
                <description></description>
            </property>
            <property name="IGetCenterLocationResult" type="IGetCenterLocationResult" scope="static">
                <description></description>
            </property>
            <property name="IShowRouteOptions" type="IShowRouteOptions" scope="static">
                <description></description>
            </property>
            <property name="IGestureEnableOptions" type="IGestureEnableOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowsScaleOptions" type="IShowsScaleOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowsCompassOptions" type="IShowsCompassOptions" scope="static">
                <description></description>
            </property>
            <property name="IUpdateComponentsOptions" type="IUpdateComponentsOptions" scope="static">
                <description></description>
            </property>
            <property name="ITranslateMarkerOptions" type="ITranslateMarkerOptions" scope="static">
                <description></description>
            </property>
            <property name="IMapContext" type="IMapContext" scope="static">
                <description></description>
            </property>
            <property name="IPageScrollToOptions" type="IPageScrollToOptions" scope="static">
                <description></description>
            </property>
            <property name="ISelectorQuerySelectMethod" type="ISelectorQuerySelectMethod" scope="static">
                <description></description>
            </property>
            <property name="IScrollOffsetResult" type="IScrollOffsetResult" scope="static">
                <description></description>
            </property>
            <property name="ISelectorQueryMeasureMethod" type="ISelectorQueryMeasureMethod" scope="static">
                <description></description>
            </property>
            <property name="ISelectorQueryStopMethod" type="ISelectorQueryStopMethod" scope="static">
                <description></description>
            </property>
            <property name="ICreateSelectorQueryOptions" type="ICreateSelectorQueryOptions" scope="static">
                <description></description>
            </property>
            <property name="IMultiLevelSelectOptions" type="IMultiLevelSelectOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowToastOptions" type="IShowToastOptions" scope="static">
                <description></description>
            </property>
            <property name="IAlertOptions" type="IAlertOptions" scope="static">
                <description></description>
            </property>
            <property name="IConfirmSuccessResult" type="IConfirmSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IConfirmOptions" type="IConfirmOptions" scope="static">
                <description></description>
            </property>
            <property name="IPromptSuccessResult" type="IPromptSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IPromptOptions" type="IPromptOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowLoadingOptions" type="IShowLoadingOptions" scope="static">
                <description></description>
            </property>
            <property name="IHideLoadingOptions" type="IHideLoadingOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowActionSheetSuccessResult" type="IShowActionSheetSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IShowActionSheetOptions" type="IShowActionSheetOptions" scope="static">
                <description></description>
            </property>
            <property name="IOptionsSelectSuccessResult" type="IOptionsSelectSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IOptionsSelectOptions" type="IOptionsSelectOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetAuthCodeSuccessResult" type="IGetAuthCodeSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetAuthCodeOptions" type="IGetAuthCodeOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetAuthUserInfoSuccessResult" type="IGetAuthUserInfoSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetAuthUserInfoOptions" type="IGetAuthUserInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetPhoneNumberSuccessResult" type="IGetPhoneNumberSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetPhoneNumberOptions" type="IGetPhoneNumberOptions" scope="static">
                <description></description>
            </property>
            <property name="ITradePaySuccessResult" type="ITradePaySuccessResult" scope="static">
                <description></description>
            </property>
            <property name="ITradePayOptions" type="ITradePayOptions" scope="static">
                <description></description>
            </property>
            <property name="IPaySignCenterOptions" type="IPaySignCenterOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenMerchantCardListOptions" type="IOpenMerchantCardListOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenCardDetailOptions" type="IOpenCardDetailOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenMerchantVoucherListOptions" type="IOpenMerchantVoucherListOptions" scope="static">
                <description></description>
            </property>
            <property name="IAddCardAuthOptions" type="IAddCardAuthOptions" scope="static">
                <description></description>
            </property>
            <property name="IStartZMVerifySuccessResult" type="IStartZMVerifySuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IStartZMVerifyOptions" type="IStartZMVerifyOptions" scope="static">
                <description></description>
            </property>
            <property name="ITextRiskIdentificationSuccessResult" type="ITextRiskIdentificationSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="ITextRiskIdentificationFailResult" type="ITextRiskIdentificationFailResult" scope="static">
                <description></description>
            </property>
            <property name="ITextRiskIdentificationOptions" type="ITextRiskIdentificationOptions" scope="static">
                <description></description>
            </property>
            <property name="INavigateToMiniProgram" type="INavigateToMiniProgram" scope="static">
                <description></description>
            </property>
            <property name="INavigateBackMiniProgram" type="INavigateBackMiniProgram" scope="static">
                <description></description>
            </property>
            <property name="IPreventCheatBizContext" type="IPreventCheatBizContext" scope="static">
                <description></description>
            </property>
            <property name="IPreventCheatSuccessResult" type="IPreventCheatSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IPreventCheatFailResult" type="IPreventCheatFailResult" scope="static">
                <description></description>
            </property>
            <property name="IPreventCheatOptions" type="IPreventCheatOptions" scope="static">
                <description></description>
            </property>
            <property name="ap" type="ap" scope="static">
                <description></description>
            </property>
            <property name="IFaceVerifySuccessResult" type="IFaceVerifySuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IFaceVerifyOptions" type="IFaceVerifyOptions" scope="static">
                <description></description>
            </property>
            <property name="IUpdateAlipayClientSuccessResult" type="IUpdateAlipayClientSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IUpdateAlipayClientOptions" type="IUpdateAlipayClientOptions" scope="static">
                <description></description>
            </property>
            <property name="INavigateToAlipayPageSuccessResult" type="INavigateToAlipayPageSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="INavigateToAlipayPageOptions" type="INavigateToAlipayPageOptions" scope="static">
                <description></description>
            </property>
            <property name="IWebViewContext" type="IWebViewContext" scope="static">
                <description></description>
            </property>
            <property name="IChooseImageSuccessResult" type="IChooseImageSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IChooseImageOptions" type="IChooseImageOptions" scope="static">
                <description></description>
            </property>
            <property name="IPreviewImageOptions" type="IPreviewImageOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetImageInfoSuccessResult" type="IGetImageInfoSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetImageInfoOptions" type="IGetImageInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="ISaveImageOptions" type="ISaveImageOptions" scope="static">
                <description></description>
            </property>
            <property name="ICompressImageOptions" type="ICompressImageOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetStorageOptions" type="ISetStorageOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetStorageSyncOptions" type="ISetStorageSyncOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetStorageSuccessResult" type="IGetStorageSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetStorageOptions" type="IGetStorageOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetStorageSyncOptions" type="IGetStorageSyncOptions" scope="static">
                <description></description>
            </property>
            <property name="IRemoveStorageOptions" type="IRemoveStorageOptions" scope="static">
                <description></description>
            </property>
            <property name="IRemoveStorageSyncOptions" type="IRemoveStorageSyncOptions" scope="static">
                <description></description>
            </property>
            <property name="IStorageInfo" type="IStorageInfo" scope="static">
                <description></description>
            </property>
            <property name="IGetStorageInfoOptions" type="IGetStorageInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="ISaveFileSuccessResult" type="ISaveFileSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="ISaveFileOptions" type="ISaveFileOptions" scope="static">
                <description></description>
            </property>
            <property name="IFileListItem" type="IFileListItem" scope="static">
                <description></description>
            </property>
            <property name="IGetSavedFileListSuccessResult" type="IGetSavedFileListSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetSavedFileListOptions" type="IGetSavedFileListOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetSavedFileInfoSuccessResult" type="IGetSavedFileInfoSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetSavedFileInfoOptions" type="IGetSavedFileInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="IRemoveSavedFileOptions" type="IRemoveSavedFileOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetFileInfoSuccessResult" type="IGetFileInfoSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetFileInfoOptions" type="IGetFileInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="ILocation" type="ILocation" scope="static">
                <description></description>
            </property>
            <property name="IGetLocationSuccessResult" type="IGetLocationSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetLocationFailResult" type="IGetLocationFailResult" scope="static">
                <description></description>
            </property>
            <property name="IGetLocationOptions" type="IGetLocationOptions" scope="static">
                <description></description>
            </property>
            <property name="IChooseLocationResult" type="IChooseLocationResult" scope="static">
                <description></description>
            </property>
            <property name="IChooseLocationOptions" type="IChooseLocationOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenLocationOptions" type="IOpenLocationOptions" scope="static">
                <description></description>
            </property>
            <property name="IHttpRequestSuccessResult" type="IHttpRequestSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IHttpRequestOptions" type="IHttpRequestOptions" scope="static">
                <description></description>
            </property>
            <property name="IUploadFileSuccessResult" type="IUploadFileSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IUploadFileOptions" type="IUploadFileOptions" scope="static">
                <description></description>
            </property>
            <property name="IDownloadFileSuccessResult" type="IDownloadFileSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IDownloadFileFailResult" type="IDownloadFileFailResult" scope="static">
                <description></description>
            </property>
            <property name="IDownloadFileOptions" type="IDownloadFileOptions" scope="static">
                <description></description>
            </property>
            <property name="IConnectFailResult" type="IConnectFailResult" scope="static">
                <description></description>
            </property>
            <property name="IConnectSocketOptions" type="IConnectSocketOptions" scope="static">
                <description></description>
            </property>
            <property name="ISendSocketMessageOptions" type="ISendSocketMessageOptions" scope="static">
                <description></description>
            </property>
            <property name="ISocketMessageResponse" type="ISocketMessageResponse" scope="static">
                <description></description>
            </property>
            <property name="ICloseSocketOptions" type="ICloseSocketOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetNetworkTypeSuccessResult" type="IGetNetworkTypeSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetNetworkTypeOptions" type="IGetNetworkTypeOptions" scope="static">
                <description></description>
            </property>
            <property name="IOnNetworkStatusChangeEvent" type="IOnNetworkStatusChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="SDKVersion" type="None" scope="instance">
                <description>&lt;p&gt;获取基础库版本号，仅供参考，代码逻辑请不要依赖这个值。&lt;/p&gt;
</description>
            </property>
            <property name="IGetSystemInfoSuccessResult" type="IGetSystemInfoSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetSystemInfoOptions" type="IGetSystemInfoOptions" scope="static">
                <description></description>
            </property>
            <property name="IClipboardOptions" type="IClipboardOptions" scope="static">
                <description></description>
            </property>
            <property name="IWatchShakeOptions" type="IWatchShakeOptions" scope="static">
                <description></description>
            </property>
            <property name="IVibrateOptions" type="IVibrateOptions" scope="static">
                <description></description>
            </property>
            <property name="IVibrateLongOptions" type="IVibrateLongOptions" scope="static">
                <description></description>
            </property>
            <property name="IVibrateShortOptions" type="IVibrateShortOptions" scope="static">
                <description></description>
            </property>
            <property name="IOnAccelerometerChangeEvent" type="IOnAccelerometerChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="IOnGyroscopeChangeEvent" type="IOnGyroscopeChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="IOnCompassChangeEvent" type="IOnCompassChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="IMakePhoneCallOptions" type="IMakePhoneCallOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetServerTimeSuccessResult" type="IGetServerTimeSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetServerTimeOptions" type="IGetServerTimeOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetKeepScreenOnOptions" type="ISetKeepScreenOnOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetScreenBrightnessOptions" type="IGetScreenBrightnessOptions" scope="static">
                <description></description>
            </property>
            <property name="ISetScreenBrightnessOptions" type="ISetScreenBrightnessOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenSettingSuccessOptions" type="IOpenSettingSuccessOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenSettingOptions" type="IOpenSettingOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetSettingSuccessResult" type="IGetSettingSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetSettingOptions" type="IGetSettingOptions" scope="static">
                <description></description>
            </property>
            <property name="IAddPhoneContactOptions" type="IAddPhoneContactOptions" scope="static">
                <description></description>
            </property>
            <property name="IShowAuthGuideOptions" type="IShowAuthGuideOptions" scope="static">
                <description></description>
            </property>
            <property name="IScanSuccessResult" type="IScanSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IScanFailResult" type="IScanFailResult" scope="static">
                <description></description>
            </property>
            <property name="IScanOptions" type="IScanOptions" scope="static">
                <description></description>
            </property>
            <property name="IOpenBluetoothAdapterSuccessResult" type="IOpenBluetoothAdapterSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IOpenBluetoothAdapterFailResult" type="IOpenBluetoothAdapterFailResult" scope="static">
                <description></description>
            </property>
            <property name="IOpenBluetoothAdapterOptions" type="IOpenBluetoothAdapterOptions" scope="static">
                <description></description>
            </property>
            <property name="ICloseBluetoothAdapterOptions" type="ICloseBluetoothAdapterOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetBluetoothAdapterStateSuccessResult" type="IGetBluetoothAdapterStateSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetBluetoothAdapterStateOptions" type="IGetBluetoothAdapterStateOptions" scope="static">
                <description></description>
            </property>
            <property name="IStartBluetoothDevicesDiscoveryOptions" type="IStartBluetoothDevicesDiscoveryOptions" scope="static">
                <description></description>
            </property>
            <property name="IStopBluetoothDevicesDiscoveryOptions" type="IStopBluetoothDevicesDiscoveryOptions" scope="static">
                <description></description>
            </property>
            <property name="IBluetoothDevice" type="IBluetoothDevice" scope="static">
                <description></description>
            </property>
            <property name="IGetBluetoothDevicesSuccessResult" type="IGetBluetoothDevicesSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetBluetoothDevicesOptions" type="IGetBluetoothDevicesOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetConnectedBluetoothDevicesSuccessResult" type="IGetConnectedBluetoothDevicesSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetConnectedBluetoothDevicesOptions" type="IGetConnectedBluetoothDevicesOptions" scope="static">
                <description></description>
            </property>
            <property name="IConnectBLEDeviceOptions" type="IConnectBLEDeviceOptions" scope="static">
                <description></description>
            </property>
            <property name="IDisconnectBLEDeviceOptions" type="IDisconnectBLEDeviceOptions" scope="static">
                <description></description>
            </property>
            <property name="IWriteBLECharacteristicValueOptions" type="IWriteBLECharacteristicValueOptions" scope="static">
                <description></description>
            </property>
            <property name="IReadBLECharacteristicValueSuccessResult" type="IReadBLECharacteristicValueSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IReadBLECharacteristicValueOptions" type="IReadBLECharacteristicValueOptions" scope="static">
                <description></description>
            </property>
            <property name="INotifyBLECharacteristicValueChangeOptions" type="INotifyBLECharacteristicValueChangeOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetBLEDeviceServicesSuccessResult" type="IGetBLEDeviceServicesSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetBLEDeviceServicesOptions" type="IGetBLEDeviceServicesOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetBLEDeviceCharacteristicsSuccessResult" type="IGetBLEDeviceCharacteristicsSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetBLEDeviceCharacteristicsOptions" type="IGetBLEDeviceCharacteristicsOptions" scope="static">
                <description></description>
            </property>
            <property name="IOnBluetoothDeviceFoundEvent" type="IOnBluetoothDeviceFoundEvent" scope="static">
                <description></description>
            </property>
            <property name="IOnBLECharacteristicValueChangeEvent" type="IOnBLECharacteristicValueChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="IOnBLEConnectionStateChangedEvent" type="IOnBLEConnectionStateChangedEvent" scope="static">
                <description></description>
            </property>
            <property name="IOnBluetoothAdapterStateChangeEvent" type="IOnBluetoothAdapterStateChangeEvent" scope="static">
                <description></description>
            </property>
            <property name="IStartBeaconDiscoveryOptions" type="IStartBeaconDiscoveryOptions" scope="static">
                <description></description>
            </property>
            <property name="IStopBeaconDiscoveryOptions" type="IStopBeaconDiscoveryOptions" scope="static">
                <description></description>
            </property>
            <property name="IIBeacon" type="IIBeacon" scope="static">
                <description></description>
            </property>
            <property name="IGetBeaconsSuccessResult" type="IGetBeaconsSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetBeaconsOptions" type="IGetBeaconsOptions" scope="static">
                <description></description>
            </property>
            <property name="IOnBeaconUpdateSuccessResult" type="IOnBeaconUpdateSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IOnBeaconUpdateOptions" type="IOnBeaconUpdateOptions" scope="static">
                <description></description>
            </property>
            <property name="IOnBeaconServiceChangeSuccessResult" type="IOnBeaconServiceChangeSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IOnBeaconServiceChangeOptions" type="IOnBeaconServiceChangeOptions" scope="static">
                <description></description>
            </property>
            <property name="IRSASuccessResult" type="IRSASuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IRSAFailResult" type="IRSAFailResult" scope="static">
                <description></description>
            </property>
            <property name="IRSAOptions" type="IRSAOptions" scope="static">
                <description></description>
            </property>
            <property name="IHideShareMenuOptions" type="IHideShareMenuOptions" scope="static">
                <description></description>
            </property>
            <property name="IGetRunSceneSuccessResult" type="IGetRunSceneSuccessResult" scope="static">
                <description></description>
            </property>
            <property name="IGetRunSceneOptions" type="IGetRunSceneOptions" scope="static">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IBoundingClientRect" superclass="None">
        <methods/>
        <properties>
            <property name="width" type="Number">
                <description></description>
            </property>
            <property name="height" type="Number">
                <description></description>
            </property>
            <property name="top" type="Number">
                <description></description>
            </property>
            <property name="right" type="Number">
                <description></description>
            </property>
            <property name="bottom" type="Number">
                <description></description>
            </property>
            <property name="left" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ISelectorQuery" superclass="None">
        <methods>
            <method name="select">
                <parameters>
                    <parameter name="selector" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="selectAll">
                <parameters>
                    <parameter name="selector" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="selectViewport">
                <parameters/>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="boundingClientRect">
                <parameters/>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="scrollOffset">
                <parameters/>
                <return-types>
                    <return-type type="ISelectorQuery"/>
                </return-types>
                <description></description>
            </method>
            <method name="exec">
                <parameters>
                    <parameter name="ret" type="ISelectorExecCallback"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="INavigateBaseCallbackOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="INavigateToOptions" superclass="None">
        <methods/>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;需要跳转的应用内非 tabBar 的目标页面路径 ,路径后可以带参数。
参数规则如下：路径与参数之间使用?分隔，参数键与参数值用=相连，不同参数必须用&amp;amp;分隔；
如 path?key1=value1&amp;amp;key2=value2&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRedirectToOptions" superclass="None">
        <methods/>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;需要跳转的应用内非 tabBar 的目标页面路径，路径后可以带参数。
参数规则如下：路径与参数之间使用?分隔，参数键与参数值用=相连，不同参数必须用&amp;amp;分隔；
如path?key1=value1&amp;amp;key2=value2&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="INavigateBackOptions" superclass="None">
        <methods/>
        <properties>
            <property name="delta" type="Number">
                <description>&lt;p&gt;返回的页面数，如果 delta 大于现有打开的页面数，则返回到首页&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRelaunchOptions" superclass="None">
        <methods/>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;页面路径。如果页面不为 tabbar 页面则路径后可以带参数。
参数规则如下：路径与参数之间使用?分隔，参数键与参数值用=相连，不同参数必须用&amp;amp;分隔；
如path?key1=value1&amp;amp;key2=value2&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISetNavigationBar" superclass="None">
        <methods/>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;导航栏标题&lt;/p&gt;
</description>
            </property>
            <property name="image" type="String">
                <description>&lt;p&gt;图片连接地址，必须是https，请使用3x高清图片。若设置了image则title参数失效&lt;/p&gt;
</description>
            </property>
            <property name="backgroundColor" type="String">
                <description>&lt;p&gt;导航栏背景色，支持十六进制颜色值&lt;/p&gt;
</description>
            </property>
            <property name="borderBottomColor" type="String">
                <description>&lt;p&gt;导航栏底部边框颜色，支持十六进制颜色值。若设置了 backgroundColor，则borderBottomColor 不会生效，默认会和 backgroundColor 颜色一样&lt;/p&gt;
</description>
            </property>
            <property name="reset" type="Boolean">
                <description>&lt;p&gt;是否重置导航栏为支付宝默认配色，默认 false&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISwitchTabOptions" superclass="None">
        <methods/>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;跳转的 tabBar 页面的路径（需在 app.json 的 tabBar 字段定义的页面）。注意：路径后不能带参数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IHideTabBarOptions" superclass="None">
        <methods/>
        <properties>
            <property name="animation" type="Boolean">
                <description>&lt;p&gt;是否需要动画效果，默认无。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IHideTabBarRedDotOptions" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description>&lt;p&gt;tabbar 的哪一项，从左边算起。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IRemoveTabBarBadgeOptions" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description>&lt;p&gt;标签页的项数序号，从左边开始计数。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ISetTabBarBadgeOptions" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description>&lt;p&gt;标签页的项数序号，从左边开始计数。&lt;/p&gt;
</description>
            </property>
            <property name="text" type="String">
                <description>&lt;p&gt;显示的文本，超过三个字符则显示成前两个字符+“…”，例如：“支付宝”显示“支付宝”，“蚂蚁金服”显示“蚂蚁…”。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ISetTabBarItemOptions" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description>&lt;p&gt;标签页的项数序号，从左边开始计数。&lt;/p&gt;
</description>
            </property>
            <property name="text" type="Number">
                <description>&lt;p&gt;标签页按钮上的文字。&lt;/p&gt;
</description>
            </property>
            <property name="iconPath" type="Number">
                <description>&lt;p&gt;图片路径，建议尺寸为 81px * 81px，支持网络图片。&lt;/p&gt;
</description>
            </property>
            <property name="selectedIconPath" type="Number">
                <description>&lt;p&gt;选中时的图片路径，建议尺寸为 81px * 81px，支持网络图片。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ISetTabBarStyleOptions" superclass="None">
        <methods/>
        <properties>
            <property name="color" type="String">
                <description>&lt;p&gt;标签（tab）上的文字默认颜色&lt;/p&gt;
</description>
            </property>
            <property name="selectedColor" type="String">
                <description>&lt;p&gt;标签（tab）上的文字选中时的颜色&lt;/p&gt;
</description>
            </property>
            <property name="backgroundColor" type="String">
                <description>&lt;p&gt;标签（tab）的背景色&lt;/p&gt;
</description>
            </property>
            <property name="borderStyle" type="String">
                <description>&lt;p&gt;标签页（tabbar）上边框的颜色， 仅支持  black 、 white 。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowTabBarOptions" superclass="None">
        <methods/>
        <properties>
            <property name="animation" type="String">
                <description>&lt;p&gt;是否需要动画效果，默认无。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowTabBarRedDotOptions" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description>&lt;p&gt;标签页的项数序号，从左边开始计数。&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IChoosePhoneContactSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="name" type="String">
                <description>&lt;p&gt;选中的联系人姓名&lt;/p&gt;
</description>
            </property>
            <property name="mobile" type="String">
                <description>&lt;p&gt;选中的联系人手机号&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChoosePhoneContactFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;p&gt;10 -&amp;gt; 没有权限；11 -&amp;gt; 用户取消操作(或设备未授权使用通讯录)&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChoosePhoneContactOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IChoosePhoneContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="result" type="IChoosePhoneContactFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="result" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IChooseAlipayContactSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="contacts" type="Array">
                <description>&lt;p&gt;选中的支付宝联系人数组&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseAlipayContactFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;p&gt;10 -&amp;gt; 没有权限；11 -&amp;gt; 用户取消操作(或设备未授权使用通讯录)&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseAlipayContactOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IChooseAlipayContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="result" type="IChooseAlipayContactFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="result" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="count" type="Number">
                <description>&lt;p&gt;单次最多选择联系人个数，默认 1，最大 10&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseContactSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="contactsDicArray" type="ReadonlyArray">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IChooseContactOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IChooseContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="result" type="IChooseContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="chooseType" type="None">
                <description>&lt;p&gt;选择类型，值为single（单选）或者 multi（多选）&lt;/p&gt;
</description>
            </property>
            <property name="includeMobileContactMode" type="None">
                <description>&lt;p&gt;包含手机通讯录联系人的模式：默认为不包含（none）、或者仅仅包含双向通讯录联系人（known）、或者包含手机通讯录联系人（all）&lt;/p&gt;
</description>
            </property>
            <property name="includeMe" type="Boolean">
                <description>&lt;p&gt;是否包含自己&lt;/p&gt;
</description>
            </property>
            <property name="multiChooseMax" type="Number">
                <description>&lt;p&gt;最大选择人数，仅 chooseType 为 multi 时才有效&lt;/p&gt;
</description>
            </property>
            <property name="multiChooseMaxTips" type="String">
                <description>&lt;p&gt;多选达到上限的文案，仅 chooseType 为 multi 时才有效&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseCitySuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="city" type="String">
                <description>&lt;p&gt;城市名&lt;/p&gt;
</description>
            </property>
            <property name="adCode" type="String">
                <description>&lt;p&gt;行政区划代码&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ICity" superclass="None">
        <methods/>
        <properties>
            <property name="city" type="String">
                <description>&lt;p&gt;城市名&lt;/p&gt;
</description>
            </property>
            <property name="adCode" type="String">
                <description>&lt;p&gt;行政区划代码&lt;/p&gt;
</description>
            </property>
            <property name="spell" type="String">
                <description>&lt;p&gt;城市名对应拼音拼写，方便用户搜索&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseCityOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IChooseCitySuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="IChooseCitySuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="showLocatedCity" type="Boolean">
                <description>&lt;p&gt;是否显示当前定位城市，默认 false&lt;/p&gt;
</description>
            </property>
            <property name="showHotCities" type="Boolean">
                <description>&lt;p&gt;是否显示热门城市，默认 true&lt;/p&gt;
</description>
            </property>
            <property name="cities" type="Array">
                <description>&lt;p&gt;自定义城市列表&lt;/p&gt;
</description>
            </property>
            <property name="hotCities" type="Array">
                <description>&lt;p&gt;自定义热门城市列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDatePickerFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;11：用户取消操作&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDatePickerSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="date" type="String">
                <description>&lt;p&gt;选择的日期&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDatePickerOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IDatePickerSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="result" type="IDatePickerFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="result" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="format" type="String">
                <description>&lt;p&gt;返回的日期格式，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;yyyy-MM-dd（默认）&lt;/li&gt;
&lt;li&gt;HH:mm&lt;/li&gt;
&lt;li&gt;yyyy-MM-dd HH:mm&lt;/li&gt;
&lt;li&gt;yyyy-MM （最低基础库：1.1.1, 可用 canIUse(&amp;#39;datePicker.object.format.yyyy-MM&amp;#39;) 判断）&lt;/li&gt;
&lt;li&gt;yyyy （最低基础库：1.1.1,可用 canIUse(&amp;#39;datePicker.object.format.yyyy&amp;#39;) 判断）&lt;/li&gt;
&lt;/ol&gt;
</description>
            </property>
            <property name="currentDate" type="String">
                <description>&lt;p&gt;初始选择的日期时间，默认当前时间&lt;/p&gt;
</description>
            </property>
            <property name="startDate" type="String">
                <description>&lt;p&gt;最小日期时间&lt;/p&gt;
</description>
            </property>
            <property name="endDate" type="String">
                <description>&lt;p&gt;最大日期时间&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IAnimationInfo" superclass="None">
        <methods/>
        <properties/>
    </class>
    <class type="IAnimation" superclass="None">
        <methods>
            <method name="opacity">
                <parameters>
                    <parameter name="value" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;透明度，参数范围 0~1&lt;/p&gt;
</description>
            </method>
            <method name="backgroundColor">
                <parameters>
                    <parameter name="color" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;颜色值&lt;/p&gt;
</description>
            </method>
            <method name="width">
                <parameters>
                    <parameter name="length" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;长度值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="height">
                <parameters>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;高度值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="top">
                <parameters>
                    <parameter name="top" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;顶部坐标值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="left">
                <parameters>
                    <parameter name="left" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;左部坐标值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="bottom">
                <parameters>
                    <parameter name="bottom" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;底部坐标值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="right">
                <parameters>
                    <parameter name="right" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;右部坐标值，如果传入数字则默认单位为 px ，可传入其他自定义单位的长度值&lt;/p&gt;
</description>
            </method>
            <method name="rotate">
                <parameters>
                    <parameter name="deg" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;deg 范围 -180 ~ 180，从原点顺时针旋转一个 deg 角度&lt;/p&gt;
</description>
            </method>
            <method name="rotateX">
                <parameters>
                    <parameter name="deg" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;deg 范围 -180 ~ 180，在 X 轴旋转一个 deg 角度&lt;/p&gt;
</description>
            </method>
            <method name="rotateY">
                <parameters>
                    <parameter name="deg" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;deg 范围 -180 ~ 180，在 Y 轴旋转一个 deg 角度&lt;/p&gt;
</description>
            </method>
            <method name="rotateZ">
                <parameters>
                    <parameter name="deg" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;deg 范围 -180 ~ 180，在 Z 轴旋转一个deg角度&lt;/p&gt;
</description>
            </method>
            <method name="rotate3d">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="z" type="Number"/>
                    <parameter name="deg" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;同 transform-function rotate3d&lt;/p&gt;
</description>
            </method>
            <method name="scale">
                <parameters>
                    <parameter name="sx" type="Number"/>
                    <parameter name="sy" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;只有一个参数时，表示在 X 轴、Y 轴同时缩放 sx 倍；两个参数时表示在 X 轴缩放 sx 倍，在 Y 轴缩放 sy 倍&lt;/p&gt;
</description>
            </method>
            <method name="scaleX">
                <parameters>
                    <parameter name="sx" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 X 轴缩放 sx 倍&lt;/p&gt;
</description>
            </method>
            <method name="scaleY">
                <parameters>
                    <parameter name="sy" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 Y 轴缩放 sy 倍&lt;/p&gt;
</description>
            </method>
            <method name="scaleZ">
                <parameters>
                    <parameter name="sz" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 Z 轴缩放 sz 倍&lt;/p&gt;
</description>
            </method>
            <method name="scale3d">
                <parameters>
                    <parameter name="sx" type="Number"/>
                    <parameter name="sy" type="Number"/>
                    <parameter name="sz" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 X 轴缩放 sx 倍，在 Y 轴缩放sy 倍，在 Z 轴缩放 sz 倍&lt;/p&gt;
</description>
            </method>
            <method name="translate">
                <parameters>
                    <parameter name="tx" type="Number"/>
                    <parameter name="ty" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;只有一个参数时，表示在 X 轴偏移 tx；两个参数时，表示在 X 轴偏移 tx，在 Y 轴偏移 ty，单位均为 px。&lt;/p&gt;
</description>
            </method>
            <method name="translateX">
                <parameters>
                    <parameter name="tx" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 X 轴偏移 tx，单位 px&lt;/p&gt;
</description>
            </method>
            <method name="translateY">
                <parameters>
                    <parameter name="ty" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 Y 轴偏移 ty，单位 px&lt;/p&gt;
</description>
            </method>
            <method name="translateZ">
                <parameters>
                    <parameter name="tz" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 Z 轴偏移 tz，单位 px&lt;/p&gt;
</description>
            </method>
            <method name="translate3d">
                <parameters>
                    <parameter name="tx" type="Number"/>
                    <parameter name="ty" type="Number"/>
                    <parameter name="tz" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;在 X 轴偏移 tx，在 Y 轴偏移ty，在Z轴偏移 tz，单位 px&lt;/p&gt;
</description>
            </method>
            <method name="skew">
                <parameters>
                    <parameter name="ax" type="Number"/>
                    <parameter name="ay" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;参数范围 -180 ~ 180。只有一个参数时，Y 轴坐标不变，X 轴坐标延顺时针倾斜 ax 度；两个参数时，分别在 X 轴倾斜 ax 度，在 Y 轴倾斜 ay 度&lt;/p&gt;
</description>
            </method>
            <method name="skewX">
                <parameters>
                    <parameter name="ax" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;参数范围 -180 ~ 180。Y 轴坐标不变，X 轴坐标延顺时针倾斜 ax 度&lt;/p&gt;
</description>
            </method>
            <method name="skewY">
                <parameters>
                    <parameter name="ay" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;参数范围 -180 ~ 180。X 轴坐标不变，Y 轴坐标延顺时针倾斜 ay 度&lt;/p&gt;
</description>
            </method>
            <method name="matrix">
                <parameters>
                    <parameter name="a" type="Number"/>
                    <parameter name="b" type="Number"/>
                    <parameter name="c" type="Number"/>
                    <parameter name="d" type="Number"/>
                    <parameter name="tx" type="Number"/>
                    <parameter name="ty" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;同 transform-function&lt;/p&gt;
</description>
            </method>
            <method name="matrix3d">
                <parameters>
                    <parameter name="a1" type="Number"/>
                    <parameter name="b1" type="Number"/>
                    <parameter name="c1" type="Number"/>
                    <parameter name="d1" type="Number"/>
                    <parameter name="a2" type="Number"/>
                    <parameter name="b2" type="Number"/>
                    <parameter name="c2" type="Number"/>
                    <parameter name="d2" type="Number"/>
                    <parameter name="a3" type="Number"/>
                    <parameter name="b3" type="Number"/>
                    <parameter name="c3" type="Number"/>
                    <parameter name="d3" type="Number"/>
                    <parameter name="a4" type="Number"/>
                    <parameter name="b4" type="Number"/>
                    <parameter name="c4" type="Number"/>
                    <parameter name="d4" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="IAnimation"/>
                </return-types>
                <description>&lt;p&gt;同 transform-function matrix3d&lt;/p&gt;
</description>
            </method>
            <method name="step">
                <parameters>
                    <parameter name="options" type="ICreateAnimationOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="export">
                <parameters/>
                <return-types>
                    <return-type type="IAnimationInfo"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ICreateAnimationOptions" superclass="None">
        <methods/>
        <properties>
            <property name="duration" type="Number">
                <description>&lt;p&gt;动画的持续时间，单位 ms，默认值 400&lt;/p&gt;
</description>
            </property>
            <property name="timeFunction" type="None">
                <description>&lt;p&gt;定义动画的效果，默认值&amp;quot;linear&amp;quot;，有效值：&amp;quot;linear&amp;quot;,&amp;quot;ease&amp;quot;,&amp;quot;ease-in&amp;quot;,&amp;quot;ease-in-out&amp;quot;,&amp;quot;ease-out&amp;quot;,&amp;quot;step-start&amp;quot;,&amp;quot;step-end&amp;quot;&lt;/p&gt;
</description>
            </property>
            <property name="delay" type="Number">
                <description>&lt;p&gt;动画延迟时间，单位 ms，默认值 0&lt;/p&gt;
</description>
            </property>
            <property name="transformOrigin" type="String">
                <description>&lt;p&gt;设置transform-origin，默认值 &amp;quot;50% 50% 0&amp;quot;&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ILinearGradient" superclass="None">
        <methods>
            <method name="addColorStop">
                <parameters>
                    <parameter name="stop" type="Number"/>
                    <parameter name="color" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;创建一个颜色的渐变点。
小于最小 stop 的部分会按最小 stop 的 color 来渲染，大于最大 stop 的部分会按最大 stop 的 color 来渲染。
需要使用 addColorStop() 来指定渐变点，至少需要两个。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ICircularGradient" superclass="None">
        <methods/>
        <properties/>
    </class>
    <class type="IGetImageDataSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="width" type="Number">
                <description></description>
            </property>
            <property name="height" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IGetImageDataOptions" superclass="None">
        <methods/>
        <properties>
            <property name="x" type="Number">
                <description></description>
            </property>
            <property name="y" type="Number">
                <description></description>
            </property>
            <property name="width" type="Number">
                <description></description>
            </property>
            <property name="height" type="Number">
                <description></description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IPutImageDataOptions" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="None">
                <description></description>
            </property>
            <property name="x" type="Number">
                <description></description>
            </property>
            <property name="y" type="Number">
                <description></description>
            </property>
            <property name="width" type="Number">
                <description></description>
            </property>
            <property name="height" type="Number">
                <description></description>
            </property>
            <property name="success" type="Function">
                <description></description>
            </property>
            <property name="fail" type="Function">
                <description></description>
            </property>
            <property name="complete" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ICanvasToTempFilePathOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="x" type="Number">
                <description>&lt;p&gt;画布 x 轴起点，默认为 0&lt;/p&gt;
</description>
            </property>
            <property name="y" type="Number">
                <description>&lt;p&gt;画布 y 轴起点，默认为 0&lt;/p&gt;
</description>
            </property>
            <property name="width" type="Number">
                <description>&lt;p&gt;画布宽度，默认为 canvas 宽度 - x&lt;/p&gt;
</description>
            </property>
            <property name="height" type="Number">
                <description>&lt;p&gt;画布高度，默认为 canvas 高度 - y&lt;/p&gt;
</description>
            </property>
            <property name="destWidth" type="Number">
                <description>&lt;p&gt;输出的图片宽度，默认为 width&lt;/p&gt;
</description>
            </property>
            <property name="destHeight" type="Number">
                <description>&lt;p&gt;输出的图片高度，默认为 height&lt;/p&gt;
</description>
            </property>
            <property name="fileType" type="None">
                <description>&lt;p&gt;目标文件的类型。合法值为jpg、png。&lt;/p&gt;
</description>
            </property>
            <property name="quality" type="Number">
                <description>&lt;p&gt;图片的质量，取值范围为 (0, 1]，不在范围内时当作 1.0 处理。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ICanvasContext" superclass="None">
        <methods>
            <method name="toTempFilePath">
                <parameters>
                    <parameter name="options" type="ICanvasToTempFilePathOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;把当前画布的内容导出生成图片，并返回文件路径。&lt;/p&gt;
</description>
            </method>
            <method name="setTextAlign">
                <parameters>
                    <parameter name="textAlign" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;textAlign 是 Canvas 2D API 描述绘制文本时，文本的对齐方式的属性。
注意，该对齐是基于CanvasRenderingContext2D.fillText 方法的x的值。
所以如果 textAlign=&amp;quot;center&amp;quot;，那么该文本将画在 x-50%*width。&lt;/p&gt;
</description>
            </method>
            <method name="setTextBaseline">
                <parameters>
                    <parameter name="textBaseline" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;textBaseline 是 Canvas 2D API 描述绘制文本时，当前文本基线的属性。&lt;/p&gt;
</description>
            </method>
            <method name="setFillStyle">
                <parameters>
                    <parameter name="color" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置填充色。
如果没有设置 fillStyle，则默认颜色为 black。&lt;/p&gt;
</description>
            </method>
            <method name="setStrokeStyle">
                <parameters>
                    <parameter name="color" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置边框颜色。
如果没有设置 strokeStyle，则默认颜色为 black。&lt;/p&gt;
</description>
            </method>
            <method name="setShadow">
                <parameters>
                    <parameter name="offsetX" type="Number"/>
                    <parameter name="offsetY" type="Number"/>
                    <parameter name="blur" type="Number"/>
                    <parameter name="color" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置阴影样式。
如果没有设置，offsetX 的默认值为 0， offsetY 的默认值为 0， blur 的默认值为 0，color 的默认值为 black。&lt;/p&gt;
</description>
            </method>
            <method name="createLinearGradient">
                <parameters>
                    <parameter name="x0" type="Number"/>
                    <parameter name="y0" type="Number"/>
                    <parameter name="x1" type="Number"/>
                    <parameter name="y1" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="ILinearGradient"/>
                </return-types>
                <description>&lt;p&gt;创建一个线性的渐变色。&lt;/p&gt;
</description>
            </method>
            <method name="createCircularGradient">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="r" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="ICircularGradient"/>
                </return-types>
                <description>&lt;p&gt;创建一个圆形的渐变色。
起点在圆心，终点在圆环。
需要使用 addColorStop() 来指定渐变点，至少需要两个。&lt;/p&gt;
</description>
            </method>
            <method name="setLineWidth">
                <parameters>
                    <parameter name="lineWidth" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置线条的宽度。&lt;/p&gt;
</description>
            </method>
            <method name="setLineCap">
                <parameters>
                    <parameter name="lineCap" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置线条的端点样式。&lt;/p&gt;
</description>
            </method>
            <method name="setLineJoin">
                <parameters>
                    <parameter name="lineJoin" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置线条的交点样式。&lt;/p&gt;
</description>
            </method>
            <method name="setMiterLimit">
                <parameters>
                    <parameter name="miterLimit" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置最大斜接长度，斜接长度指的是在两条线交汇处内角和外角之间的距离。 当 setLineJoin() 为 miter 时才有效。超过最大倾斜长度的，连接处将以 lineJoin 为 bevel 来显示&lt;/p&gt;
</description>
            </method>
            <method name="rect">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="width" type="Number"/>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;创建一个矩形。
用 fill() 或者 stroke() 方法将矩形画到 canvas 中。&lt;/p&gt;
</description>
            </method>
            <method name="fillRect">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="width" type="Number"/>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;填充矩形。
用 setFillStyle() 设置矩形的填充色，如果没设置则默认是 black。&lt;/p&gt;
</description>
            </method>
            <method name="strokeRect">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="width" type="Number"/>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;画一个矩形(非填充)。
用 setFillStroke() 设置矩形线条的颜色，如果没设置默认是 black。&lt;/p&gt;
</description>
            </method>
            <method name="clearRect">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="width" type="Number"/>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;清除画布上在该矩形区域内的内容。
clearRect 并非画一个白色的矩形在地址区域，而是清空，为了有直观感受，可以对 canvas 加了一层背景色。&lt;/p&gt;
</description>
            </method>
            <method name="fill">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;对当前路径中的内容进行填充。默认的填充色为黑色。
如果当前路径没有闭合，fill() 方法会将起点和终点进行连接，然后填充。
fill() 填充的的路径是从 beginPath() 开始计算，但是不会将 fillRect() 包含进去。&lt;/p&gt;
</description>
            </method>
            <method name="stroke">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;画出当前路径的边框。默认 black。
stroke() 描绘的的路径是从 beginPath() 开始计算，但是不会将 strokeRect() 包含进去。&lt;/p&gt;
</description>
            </method>
            <method name="beginPath">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;开始创建一个路径，需要调用 fill 或者 stroke 才会使用路径进行填充或描边。
在最开始的时候相当于调用了一次 beginPath()。
同一个路径内的多次setFillStyle()、setStrokeStyle()、setLineWidth()等设置，以最后一次设置为准。&lt;/p&gt;
</description>
            </method>
            <method name="closePath">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;关闭一个路径。
关闭路径会连接起点和终点。
如果关闭路径后没有调用 fill() 或者 stroke() 并开启了新的路径，那之前的路径将不会被渲染。&lt;/p&gt;
</description>
            </method>
            <method name="moveTo">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;把路径移动到画布中的指定点，不创建线条。
用 stroke() 方法来画线条。&lt;/p&gt;
</description>
            </method>
            <method name="lineTo">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;lineTo 方法增加一个新点，然后创建一条从上次指定点到目标点的线。
用 stroke() 方法来画线条&lt;/p&gt;
</description>
            </method>
            <method name="arc">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="r" type="Number"/>
                    <parameter name="sAngle" type="Number"/>
                    <parameter name="eAngle" type="Number"/>
                    <parameter name="counterclockwise" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;画一条弧线。
创建一个圆可以用 arc() 方法指定其实弧度为0，终止弧度为 2 * Math.PI。
用 stroke() 或者 fill() 方法来在 canvas 中画弧线。&lt;/p&gt;
</description>
            </method>
            <method name="bezierCurveTo">
                <parameters>
                    <parameter name="cp1x" type="Number"/>
                    <parameter name="cp1y" type="Number"/>
                    <parameter name="cp2x" type="Number"/>
                    <parameter name="cp2y" type="Number"/>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;创建三次方贝塞尔曲线路径。
曲线的起始点为路径中前一个点。&lt;/p&gt;
</description>
            </method>
            <method name="clip">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将当前创建的路径设置为当前剪切路径。&lt;/p&gt;
</description>
            </method>
            <method name="quadraticCurveTo">
                <parameters>
                    <parameter name="cpx" type="Number"/>
                    <parameter name="cpy" type="Number"/>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;创建二次贝塞尔曲线路径。
曲线的起始点为路径中前一个点。&lt;/p&gt;
</description>
            </method>
            <method name="scale">
                <parameters>
                    <parameter name="scaleWidth" type="Number"/>
                    <parameter name="scaleHeight" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;在调用scale方法后，之后创建的路径其横纵坐标会被缩放。多次调用scale，倍数会相乘。&lt;/p&gt;
</description>
            </method>
            <method name="rotate">
                <parameters>
                    <parameter name="rotate" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;以原点为中心，原点可以用 translate方法修改。顺时针旋转当前坐标轴。多次调用rotate，旋转的角度会叠加。&lt;/p&gt;
</description>
            </method>
            <method name="translate">
                <parameters>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;对当前坐标系的原点(0, 0)进行变换，默认的坐标系原点为页面左上角。&lt;/p&gt;
</description>
            </method>
            <method name="setFontSize">
                <parameters>
                    <parameter name="fontSize" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置字体大小。&lt;/p&gt;
</description>
            </method>
            <method name="fillText">
                <parameters>
                    <parameter name="text" type="String"/>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;在画布上绘制被填充的文本。&lt;/p&gt;
</description>
            </method>
            <method name="drawImage">
                <parameters>
                    <parameter name="imageResource" type="String"/>
                    <parameter name="x" type="Number"/>
                    <parameter name="y" type="Number"/>
                    <parameter name="width" type="Number"/>
                    <parameter name="height" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;绘制图像，图像保持原始尺寸。&lt;/p&gt;
</description>
            </method>
            <method name="setGlobalAlpha">
                <parameters>
                    <parameter name="alpha" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置全局画笔透明度。&lt;/p&gt;
</description>
            </method>
            <method name="setLineDash">
                <parameters>
                    <parameter name="segments" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置虚线的样式&lt;/p&gt;
</description>
            </method>
            <method name="transform">
                <parameters>
                    <parameter name="scaleX" type="Number"/>
                    <parameter name="skewX" type="Number"/>
                    <parameter name="skewY" type="Number"/>
                    <parameter name="scaleY" type="Number"/>
                    <parameter name="translateX" type="Number"/>
                    <parameter name="translateY" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;使用矩阵多次叠加当前变换的方法，矩阵由方法的参数进行描述。你可以缩放、旋转、移动和倾斜上下文。&lt;/p&gt;
</description>
            </method>
            <method name="setTransform">
                <parameters>
                    <parameter name="scaleX" type="Number"/>
                    <parameter name="skewX" type="Number"/>
                    <parameter name="skewY" type="Number"/>
                    <parameter name="scaleY" type="Number"/>
                    <parameter name="translateX" type="Number"/>
                    <parameter name="translateY" type="Number"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;使用单位矩阵重新设置（覆盖）当前的变换并调用变换的方法，此变换由方法的变量进行描述。&lt;/p&gt;
</description>
            </method>
            <method name="getImageData">
                <parameters>
                    <parameter name="options" type="IGetImageDataOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取 canvas 区域隐含的像素数据。&lt;/p&gt;
</description>
            </method>
            <method name="putImageData">
                <parameters>
                    <parameter name="options" type="IPutImageDataOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将像素数据绘制到画布。&lt;/p&gt;
</description>
            </method>
            <method name="save">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;保存当前的绘图上下文。&lt;/p&gt;
</description>
            </method>
            <method name="restore">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;恢复之前保存的绘图上下文。&lt;/p&gt;
</description>
            </method>
            <method name="draw">
                <parameters>
                    <parameter name="reserve" type="Boolean"/>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中。
绘图上下文需要由 my.createCanvasContext(canvasId) 来创建。&lt;/p&gt;
</description>
            </method>
            <method name="measureText">
                <parameters>
                    <parameter name="text" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="None"/>
                </return-types>
                <description>&lt;p&gt;测量文本尺寸信息，目前仅返回文本宽度。同步接口。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetCenterLocationResult" superclass="None">
        <methods/>
        <properties>
            <property name="longitude" type="Number">
                <description></description>
            </property>
            <property name="latitude" type="Number">
                <description></description>
            </property>
            <property name="scale" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowRouteOptions" superclass="None">
        <methods/>
        <properties>
            <property name="searchType" type="None">
                <description>&lt;p&gt;搜索类型：10.1.50新增，有&amp;quot;walk&amp;quot;, &amp;quot;bus&amp;quot;, &amp;quot;drive&amp;quot;, &amp;quot;ride&amp;quot;, 默认值为walk&lt;/p&gt;
</description>
            </property>
            <property name="startLat" type="Number">
                <description>&lt;p&gt;起点纬度&lt;/p&gt;
</description>
            </property>
            <property name="startLng" type="Number">
                <description>&lt;p&gt;起点经度&lt;/p&gt;
</description>
            </property>
            <property name="endLat" type="Number">
                <description>&lt;p&gt;终点纬度&lt;/p&gt;
</description>
            </property>
            <property name="endLng" type="Number">
                <description>&lt;p&gt;终点经度&lt;/p&gt;
</description>
            </property>
            <property name="throughPoints" type="Array">
                <description>&lt;p&gt;途径点：10.1.50新增,仅驾车规划有效，searchType=“drive”&lt;/p&gt;
</description>
            </property>
            <property name="routeColor" type="String">
                <description>&lt;p&gt;路线颜色  10.1.50之后，该值仅在2d地图中生效&lt;/p&gt;
</description>
            </property>
            <property name="iconPath" type="String">
                <description>&lt;p&gt;路线纹理  10.1.35 3d地图其优先级高于routeColor，即纹理会覆盖颜色值；10.1.50建议不再设置，在3d地图下提供了默认的纹理图案。&lt;/p&gt;
</description>
            </property>
            <property name="iconWidth" type="Number">
                <description>&lt;p&gt;纹理宽度  10.1.35 iconPath设置时才生效。10.1.50建议不再设置，在3d地图下提供了默认的纹理宽度。&lt;/p&gt;
</description>
            </property>
            <property name="routeWidth" type="Number">
                <description>&lt;p&gt;路线宽度  在不设置纹理时有效。 10.1.50建议不再设置，在2d地图下提供了默认值，3d不需要设置。&lt;/p&gt;
</description>
            </property>
            <property name="zIndex" type="Number">
                <description>&lt;p&gt;覆盖物 Z 轴坐标  10.1.35&lt;/p&gt;
</description>
            </property>
            <property name="mode" type="None">
                <description>&lt;p&gt;只有驾车模式和公交模式支持，可选。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0：最快捷模式，速度优先（时间）&lt;/li&gt;
&lt;li&gt;1：最经济模式，费用优先（不走收费路段的最快道路）&lt;/li&gt;
&lt;li&gt;2：最少换乘模式，距离优先&lt;/li&gt;
&lt;li&gt;3：最少步行模式，不走快速路&lt;/li&gt;
&lt;li&gt;4：最舒适模式，结合实时交通（躲避拥堵）&lt;/li&gt;
&lt;li&gt;5：不乘地铁模式，多策略（同时使用速度优先、费用优先、距离优先三个策略）&lt;/li&gt;
&lt;li&gt;6：不走高速&lt;/li&gt;
&lt;li&gt;7：不走高速且避免收费&lt;/li&gt;
&lt;li&gt;8：躲避收费和拥堵&lt;/li&gt;
&lt;li&gt;9：不走高速且躲避收费和拥堵&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="city" type="String">
                <description>&lt;p&gt;公交模式下必填&lt;/p&gt;
</description>
            </property>
            <property name="destinationCity" type="String">
                <description>&lt;p&gt;公交跨城模式下必填&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGestureEnableOptions" superclass="None">
        <methods/>
        <properties>
            <property name="isGestureEnable" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowsScaleOptions" superclass="None">
        <methods/>
        <properties>
            <property name="isShowsScale" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowsCompassOptions" superclass="None">
        <methods/>
        <properties>
            <property name="isShowsCompass" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IUpdateComponentsOptions" superclass="None">
        <methods/>
        <properties>
            <property name="scale" type="Number">
                <description></description>
            </property>
            <property name="longitude" type="Number">
                <description></description>
            </property>
            <property name="latitude" type="Number">
                <description></description>
            </property>
            <property name="command" type="None">
                <description></description>
            </property>
            <property name="setting" type="None">
                <description></description>
            </property>
            <property name="markers" type="None">
                <description></description>
            </property>
            <property name="polylines" type="None">
                <description></description>
            </property>
            <property name="include-points" type="None">
                <description></description>
            </property>
            <property name="include-padding" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ITranslateMarkerOptions" superclass="None">
        <methods/>
        <properties>
            <property name="markerId" type="String">
                <description></description>
            </property>
            <property name="destination" type="None">
                <description></description>
            </property>
            <property name="autoRotate" type="Boolean">
                <description>&lt;p&gt;选填，默认true&lt;/p&gt;
</description>
            </property>
            <property name="rotate" type="Number">
                <description>&lt;p&gt;选填，在autoRotate为false的情况下才有效，不填默认是0&lt;/p&gt;
</description>
            </property>
            <property name="duration" type="Number">
                <description>&lt;p&gt;选填，单位ms，默认1000ms&lt;/p&gt;
</description>
            </property>
            <property name="animationEnd" type="Function">
                <description>&lt;p&gt;动画结束回调&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IMapContext" superclass="None">
        <methods>
            <method name="moveToLocation">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;移动视野到定位点并恢复到默认缩放级别，需要配合map组件的show-location使用&lt;/p&gt;
</description>
            </method>
            <method name="gestureEnable">
                <parameters>
                    <parameter name="options" type="IGestureEnableOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置所有手势是否可用，1：可用 ，0：不可用&lt;/p&gt;
</description>
            </method>
            <method name="showsScale">
                <parameters>
                    <parameter name="options" type="IShowsScaleOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置比例尺控件是否可见，1：可见 ，0：不可见&lt;/p&gt;
</description>
            </method>
            <method name="showsCompass">
                <parameters>
                    <parameter name="options" type="IShowsCompassOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;设置指南针是否可见，1：可见 ，0：不可见&lt;/p&gt;
</description>
            </method>
            <method name="showRoute">
                <parameters>
                    <parameter name="options" type="IShowRouteOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;规划步行路线，一条&lt;/p&gt;
</description>
            </method>
            <method name="clearRoute">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;清除地图上的步行导航路线&lt;/p&gt;
</description>
            </method>
            <method name="getCenterLocation">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;获取当前地图中心位置&lt;/p&gt;
</description>
            </method>
            <method name="updateComponents">
                <parameters>
                    <parameter name="options" type="IUpdateComponentsOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;增量更新地图接口&lt;/p&gt;
</description>
            </method>
            <method name="translateMarker">
                <parameters>
                    <parameter name="options" type="ITranslateMarkerOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;平移marker接口
备注：对同一个markerId在translateMarker没animationEnd之前再次调动会被丢掉，下一次动画需要在animationEnd之后再调用才有效。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IPageScrollToOptions" superclass="None">
        <methods/>
        <properties>
            <property name="scrollTop" type="Number">
                <description>&lt;p&gt;滚动到页面的目标位置，单位 px&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISelectorQuerySelectMethod" superclass="None">
        <methods>
            <method name="select">
                <parameters>
                    <parameter name="selector" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="ISelectorQueryMeasureMethod"/>
                </return-types>
                <description>&lt;p&gt;选择当前第一个匹配选择器的节点，选择器支持 id 选择器以及 class 选择器.&lt;/p&gt;
</description>
            </method>
            <method name="selectAll">
                <parameters>
                    <parameter name="selector" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="ISelectorQueryMeasureMethod"/>
                </return-types>
                <description>&lt;p&gt;选择所有匹配选择器的节点，选择器支持 id 选择器以及 class 选择器.&lt;/p&gt;
</description>
            </method>
            <method name="selectViewport">
                <parameters/>
                <return-types>
                    <return-type type="ISelectorQueryMeasureMethod"/>
                </return-types>
                <description>&lt;p&gt;选择窗口对象&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IScrollOffsetResult" superclass="None">
        <methods/>
        <properties>
            <property name="scrollTop" type="Number">
                <description></description>
            </property>
            <property name="scrollLeft" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ISelectorQueryMeasureMethod" superclass="None">
        <methods>
            <method name="boundingClientRect">
                <parameters/>
                <return-types>
                    <return-type type="None"/>
                </return-types>
                <description>&lt;p&gt;将当前选择节点的位置信息放入查询结果，类似 dom 的 getBoundingClientRect，
返回对象包含 width/height/left/top/bottom/right. 如果当前节点为窗口对象则只返回 width/height.&lt;/p&gt;
</description>
            </method>
            <method name="scrollOffset">
                <parameters/>
                <return-types>
                    <return-type type="None"/>
                </return-types>
                <description>&lt;p&gt;将当前选择节点的滚动信息放入查询结果，返回对象包含 scrollTop/scrollLeft.&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ISelectorQueryStopMethod" superclass="None">
        <methods>
            <method name="exec">
                <parameters>
                    <parameter name="callback" type="Function"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;将查询结果放入 callback 回调中。查询结果为数组，每项为一次查询的结果，如果当前是节点列表，则单次查询结果也为数组。
注意 exec 必须放到 Page onReady 后调用。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ICreateSelectorQueryOptions" superclass="None">
        <methods/>
        <properties>
            <property name="page" type="String">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IMultiLevelSelectOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="MultiLevelSelectSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="result" type="MultiLevelSelectSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;标题&lt;/p&gt;
</description>
            </property>
            <property name="list" type="MultiLevelSelectOptionsList">
                <description>&lt;p&gt;选择数据列表&lt;/p&gt;
</description>
            </property>
            <property name="name" type="String">
                <description>&lt;p&gt;条目名称&lt;/p&gt;
</description>
            </property>
            <property name="subList" type="IMultiLevelSelectOptions">
                <description>&lt;p&gt;子条目列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IShowToastOptions" superclass="None">
        <methods/>
        <properties>
            <property name="content" type="String">
                <description>&lt;p&gt;提示的内容&lt;/p&gt;
</description>
            </property>
            <property name="type" type="None">
                <description>&lt;p&gt;toast 类型，展示相应图标,success, fail, exception, none(默认值)。其中 exception 类型必须传文字信息&lt;/p&gt;
</description>
            </property>
            <property name="duration" type="Number">
                <description>&lt;p&gt;显示时长，单位为 ms，默认 2000&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="fail" type="Function">
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="complete" type="Function">
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IAlertOptions" superclass="None">
        <methods/>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;alert框的标题&lt;/p&gt;
</description>
            </property>
            <property name="content" type="String">
                <description>&lt;p&gt;alert框的内容&lt;/p&gt;
</description>
            </property>
            <property name="buttonText" type="String">
                <description>&lt;p&gt;按钮文字，默认确定&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="fail" type="Function">
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="complete" type="Function">
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IConfirmSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="confirm" type="Boolean">
                <description>&lt;p&gt;点击 confirm 返回 true，点击 cancel 返回false&lt;/p&gt;
</description>
            </property>
            <property name="ok" type="Boolean">
                <description>&lt;p&gt;是否点击了确认&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IConfirmOptions" superclass="None">
        <methods/>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;confirm框的标题&lt;/p&gt;
</description>
            </property>
            <property name="content" type="String">
                <description>&lt;p&gt;confirm框的内容&lt;/p&gt;
</description>
            </property>
            <property name="confirmButtonText" type="String">
                <description>&lt;p&gt;确认按钮文字，默认‘确定’&lt;/p&gt;
</description>
            </property>
            <property name="cancelButtonText" type="String">
                <description>&lt;p&gt;确认按钮文字，默认‘取消’&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="fail" type="Function">
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="complete" type="Function">
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPromptSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="ok" type="Boolean">
                <description>&lt;p&gt;点击 ok 返回 true，点击 cancel 返回false&lt;/p&gt;
</description>
            </property>
            <property name="inputValue" type="String">
                <description>&lt;p&gt;当ok为true时，返回用户输入的内容&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPromptOptions" superclass="None">
        <methods/>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;prompt框标题&lt;/p&gt;
</description>
            </property>
            <property name="message" type="String">
                <description>&lt;p&gt;prompt框文本，默认‘请输入内容’&lt;/p&gt;
</description>
            </property>
            <property name="placeholder" type="String">
                <description>&lt;p&gt;输入框内的提示文案&lt;/p&gt;
</description>
            </property>
            <property name="align" type="None">
                <description>&lt;p&gt;message对齐方式，可用枚举left/center/right，iOS ‘center’, android ‘left’&lt;/p&gt;
</description>
            </property>
            <property name="okButtonText" type="String">
                <description>&lt;p&gt;确认按钮文字，默认‘确定’&lt;/p&gt;
</description>
            </property>
            <property name="cancelButtonText" type="String">
                <description>&lt;p&gt;取消按钮文字，默认‘取消’&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="fail" type="Function">
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </property>
            <property name="complete" type="Function">
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IShowLoadingOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="content" type="String">
                <description>&lt;p&gt;loading内容&lt;/p&gt;
</description>
            </property>
            <property name="delay" type="Number">
                <description>&lt;p&gt;loading延迟时间,默认 0。如果在此时间之前调用了 my.hideLoading 则不会显示&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IHideLoadingOptions" superclass="None">
        <methods/>
        <properties/>
    </class>
    <class type="IShowActionSheetSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="index" type="Number">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IShowActionSheetOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IShowActionSheetSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="IShowActionSheetSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;菜单标题&lt;/p&gt;
</description>
            </property>
            <property name="items" type="None">
                <description>&lt;p&gt;菜单按钮文字数组&lt;/p&gt;
</description>
            </property>
            <property name="cancelButtonText" type="String">
                <description>&lt;p&gt;取消按钮文案。默认为‘取消’。注：Android平台此字段无效，不会显示取消按钮。&lt;/p&gt;
</description>
            </property>
            <property name="destructiveBtnIndex" type="Number">
                <description>&lt;p&gt;（iOS特殊处理）指定按钮的索引号，从0开始，使用场景：需要删除或清除数据等类似场景，默认红色&lt;/p&gt;
</description>
            </property>
            <property name="badges" type="Array">
                <description>&lt;p&gt;需飘红选项的数组，数组内部对象字段见下表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOptionsSelectSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="selectedOneIndex" type="Number">
                <description>&lt;p&gt;选项一选择的值&lt;/p&gt;
</description>
            </property>
            <property name="selectedOneOption" type="String">
                <description>&lt;p&gt;选项一选择的内容&lt;/p&gt;
</description>
            </property>
            <property name="selectedTwoIndex" type="Number">
                <description>&lt;p&gt;选项二选择的值&lt;/p&gt;
</description>
            </property>
            <property name="selectedTwoOption" type="String">
                <description>&lt;p&gt;选项二选择的值&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOptionsSelectOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IOptionsSelectSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="title" type="String">
                <description>&lt;p&gt;头部标题信息&lt;/p&gt;
</description>
            </property>
            <property name="optionsOne" type="None">
                <description>&lt;p&gt;选项一列表&lt;/p&gt;
</description>
            </property>
            <property name="optionsTwo" type="None">
                <description>&lt;p&gt;选项二列表&lt;/p&gt;
</description>
            </property>
            <property name="selectedOneIndex" type="Number">
                <description>&lt;p&gt;选项一默认选中&lt;/p&gt;
</description>
            </property>
            <property name="selectedTwoIndex" type="Number">
                <description>&lt;p&gt;选项二默认选中&lt;/p&gt;
</description>
            </property>
            <property name="positiveString" type="String">
                <description>&lt;p&gt;确定按钮文案&lt;/p&gt;
</description>
            </property>
            <property name="negativeString" type="String">
                <description>&lt;p&gt;取消按钮文档&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetAuthCodeSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="authCode" type="String">
                <description>&lt;p&gt;授权码&lt;/p&gt;
</description>
            </property>
            <property name="authErrorScope" type="Readonly">
                <description>&lt;p&gt;失败的授权类型，key是授权失败的 scope，value 是对应的错误码&lt;/p&gt;
</description>
            </property>
            <property name="authSuccessScope" type="Readonly">
                <description>&lt;p&gt;成功的授权 scope&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetAuthCodeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IGetAuthCodeSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="scopes" type="None">
                <description>&lt;p&gt;授权类型，默认 auth_base。支持 auth_base（静默授权）/ auth_user（主动授权） / auth_zhima（芝麻信用）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetAuthUserInfoSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="nickName" type="String">
                <description>&lt;p&gt;用户昵称&lt;/p&gt;
</description>
            </property>
            <property name="avatar" type="String">
                <description>&lt;p&gt;用户头像链接&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetAuthUserInfoOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="result" type="IGetAuthUserInfoSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetPhoneNumberSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="response" type="String">
                <description>&lt;p&gt;完整的报文数据，前端需要将该报文发送到开发者服务端做验签和解密处理&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetPhoneNumberOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetPhoneNumberSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ITradePaySuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="resultCode" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;9000：订单支付成功&lt;/li&gt;
&lt;li&gt;8000：正在处理中&lt;/li&gt;
&lt;li&gt;4000：订单支付失败&lt;/li&gt;
&lt;li&gt;6001：用户中途取消&lt;/li&gt;
&lt;li&gt;6002：网络连接出错&lt;/li&gt;
&lt;li&gt;6004：支付结果未知（有可能已经支付成功），请查询商户订单列表中订单的支付状态&lt;/li&gt;
&lt;li&gt;99：用户点击忘记密码导致快捷界面退出(only iOS)&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="callbackUrl" type="String">
                <description></description>
            </property>
            <property name="extendInfo" type="Record">
                <description></description>
            </property>
            <property name="memo" type="String">
                <description></description>
            </property>
            <property name="result" type="Object">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ITradePayOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="ITradePaySuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="tradeNO" type="String">
                <description>&lt;p&gt;接入小程序支付时传入此参数。此参数为支付宝交易号，注意参数有大小写区分。&lt;/p&gt;
</description>
            </property>
            <property name="orderStr" type="String">
                <description>&lt;p&gt;完整的支付参数拼接成的字符串，从服务端获取。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPaySignCenterOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="signStr" type="String">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IOpenMerchantCardListOptions" superclass="None">
        <methods/>
        <properties>
            <property name="partnerId" type="String">
                <description>&lt;p&gt;商户编号&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenCardDetailOptions" superclass="None">
        <methods/>
        <properties>
            <property name="passId" type="String">
                <description>&lt;p&gt;卡实例Id&lt;/p&gt;
&lt;p&gt;passId获取方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1）通过alipass创建的卡
  调用alipay.pass.instance.add(支付宝pass新建卡券实例接口)接口，在出参“result”中可获取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2）通过会员卡创建的卡
  调用alipay.marketing.card.query(会员卡查询)接口，在schema_url中可获取，具体参数为“p=xxx”，xxx即为passId。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenMerchantVoucherListOptions" superclass="None">
        <methods/>
        <properties>
            <property name="partnerId" type="String">
                <description>&lt;p&gt;商户编号&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IAddCardAuthOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="AddCardAuthSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="AddCardAuthSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;开卡授权的页面地址，从  alipay.marketing.card.activateurl.apply接口获取&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStartZMVerifySuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="token" type="String">
                <description>&lt;p&gt;认证标识&lt;/p&gt;
</description>
            </property>
            <property name="passed" type="String">
                <description>&lt;p&gt;认证是否通过&lt;/p&gt;
</description>
            </property>
            <property name="reason" type="String">
                <description>&lt;p&gt;认证不通过原因&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStartZMVerifyOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IStartZMVerifySuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="bizNo" type="String">
                <description>&lt;p&gt;认证标识&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ITextRiskIdentificationSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="type" type="TextRiskIdentificationType">
                <description>&lt;p&gt;目标内容文本识别到的类型，keyword 表示关键词、0 表示广告、1表示涉政、2表示涉黄、3表示低俗辱骂&lt;/p&gt;
</description>
            </property>
            <property name="hitKeywords" type="ReadonlyArray">
                <description>&lt;p&gt;仅当识别命中了 type 为 keyword 时，才会返回该字段&lt;/p&gt;
</description>
            </property>
            <property name="score" type="String">
                <description>&lt;p&gt;识别命中得分，最高分100分。仅当识别没有命中 keyword ，但入参中包含了广告或涉政或涉黄时，才会返回该字段&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ITextRiskIdentificationFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="String">
                <description>&lt;p&gt;识别错误码&lt;/p&gt;
</description>
            </property>
            <property name="errorMessage" type="String">
                <description>&lt;p&gt;识别错误消息&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ITextRiskIdentificationOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="ITextRiskIdentificationSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="ITextRiskIdentificationFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="content" type="String">
                <description>&lt;p&gt;需要进行风险识别的文本内容&lt;/p&gt;
</description>
            </property>
            <property name="type" type="None">
                <description>&lt;p&gt;识别类型：keyword 表示关键词、0 表示广告、1表示涉政、2表示涉黄、3表示低俗辱骂&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="INavigateToMiniProgram" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="appId" type="String">
                <description>&lt;p&gt;要跳转的目标小程序appId&lt;/p&gt;
</description>
            </property>
            <property name="path" type="String">
                <description>&lt;p&gt;打开的页面路径，如果为空则打开首页&lt;/p&gt;
</description>
            </property>
            <property name="extraData" type="Record">
                <description>&lt;p&gt;需要传递给目标小程序的数据，目标小程序可在 App.onLaunch()，App.onShow() 中获取到这份数据&lt;/p&gt;
</description>
            </property>
            <property name="envVersion" type="None">
                <description>&lt;p&gt;要打开的小程序版本，有效值 develop（开发版），trial（体验版），release（正式版） ，仅在当前小程序为开发版或体验版时此参数有效；如果当前小程序是正式版，则打开的小程序必定是正式版。默认值 release&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="INavigateBackMiniProgram" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="extraData" type="Record">
                <description>&lt;p&gt;需要传递给目标小程序的数据，目标小程序可在 App.onLaunch()，App.onShow() 中获取到这份数据&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPreventCheatBizContext" superclass="None">
        <methods/>
        <properties>
            <property name="service" type="None">
                <description>&lt;p&gt;合作伙伴匹配服务类型&lt;/p&gt;
</description>
            </property>
            <property name="risk_type" type="None">
                <description>&lt;p&gt;风险策略类型&lt;/p&gt;
</description>
            </property>
            <property name="mobile_no" type="String">
                <description>&lt;p&gt;用于输入用户注册的手机号码。&lt;/p&gt;
</description>
            </property>
            <property name="pid" type="String">
                <description>&lt;p&gt;申请业务合作伙伴ID&lt;/p&gt;
</description>
            </property>
            <property name="user_id" type="String">
                <description>&lt;p&gt;支付宝用户ID&lt;/p&gt;
</description>
            </property>
            <property name="bank_card_no" type="String">
                <description>&lt;p&gt;银行卡号&lt;/p&gt;
</description>
            </property>
            <property name="cert_no" type="String">
                <description>&lt;p&gt;用于输入用户的身份证号码&lt;/p&gt;
</description>
            </property>
            <property name="client_ip" type="String">
                <description>&lt;p&gt;账户登录IP&lt;/p&gt;
</description>
            </property>
            <property name="email_address" type="String">
                <description>&lt;p&gt;邮箱账号&lt;/p&gt;
</description>
            </property>
            <property name="imei" type="String">
                <description>&lt;p&gt;手机序列号&lt;/p&gt;
</description>
            </property>
            <property name="imsi" type="String">
                <description>&lt;p&gt;国际移动用户识别码&lt;/p&gt;
</description>
            </property>
            <property name="mac_address" type="String">
                <description>&lt;p&gt;mac地址或设备唯一标识&lt;/p&gt;
</description>
            </property>
            <property name="extended_info" type="String">
                <description>&lt;p&gt;拓展字段，其余信息通过此字段进行传输：&lt;/p&gt;
&lt;p&gt;业务约定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nickname:账户昵称；&lt;/li&gt;
&lt;li&gt;reg_time:账户注册时间&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPreventCheatSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="riskResult" type="String">
                <description>&lt;p&gt;风险识别结果：&lt;/p&gt;
&lt;p&gt;riskinfo_anticheat_common—风险评级结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rank0 信息不足/参数有误&lt;/li&gt;
&lt;li&gt;rank1 表示用户作弊风险为低&lt;/li&gt;
&lt;li&gt;rank2 表示用户作弊风险为中&lt;/li&gt;
&lt;li&gt;rank3 表示用户作弊风险为高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;riskinfo_anticheat_common_infocode—风险评级说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;171-作弊风险&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="riskResultDesc" type="String">
                <description>&lt;p&gt;风险信息描述&lt;/p&gt;
</description>
            </property>
            <property name="uniqueId" type="String">
                <description>&lt;p&gt;业务唯一识别码&lt;/p&gt;
&lt;p&gt;用户标识请求信息&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPreventCheatFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="String">
                <description>&lt;p&gt;识别错误码&lt;/p&gt;
</description>
            </property>
            <property name="errorMessage" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;serviceNoAuth：服务未授权。请检查配置的账户是否有当前接口权限以及service参数是否正确&lt;/li&gt;
&lt;li&gt;riskTypeNoAuth：场景（risktype）未授权。请检查risktype参数是否正确&lt;/li&gt;
&lt;li&gt;bizContentEmpty：风险数据内容为空。检查入参格式&lt;/li&gt;
&lt;li&gt;paramMissingError：参数缺失。检查必传参数是否传入&lt;/li&gt;
&lt;li&gt;param error：参数错误。检查入参格式是否符合文档要求&lt;/li&gt;
&lt;li&gt;SYSTEM_OUT_ERROR：系统繁忙。请稍后再试&lt;/li&gt;
&lt;li&gt;INVALID_PARAMETER：缺少必选参数或参数有误。检查参数是否正确或者缺失&lt;/li&gt;
&lt;li&gt;OVER_LIMIT：超过调用量限制。如需增加额度，请发邮件至&lt;a href="mailto:RiskGoCSC@service.alipay.com"&gt;RiskGoCSC@service.alipay.com&lt;/a&gt;进行申请&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPreventCheatOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IPreventCheatSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IPreventCheatFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="pid" type="String">
                <description>&lt;p&gt;小程序的开放平台账号&lt;/p&gt;
</description>
            </property>
            <property name="appId" type="String">
                <description>&lt;p&gt;小程序对应的APPID&lt;/p&gt;
</description>
            </property>
            <property name="biz_context" type="IPreventCheatBizContext">
                <description>&lt;p&gt;需要识别的业务参数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ap" superclass="None">
        <methods>
            <method name="preventCheat">
                <parameters>
                    <parameter name="options" type="IPreventCheatOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="faceVerify">
                <parameters>
                    <parameter name="options" type="IFaceVerifyOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;该接口通过活体检测和人脸比对技术，认证当前用户是否为登陆支付宝用户的本人和真人。&lt;/p&gt;
</description>
            </method>
            <method name="updateAlipayClient">
                <parameters>
                    <parameter name="options" type="IUpdateAlipayClientOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;打开支付宝客户端升级界面，用户可主动选择升级支付宝客户端。&lt;/p&gt;
</description>
            </method>
            <method name="navigateToAlipayPage">
                <parameters>
                    <parameter name="options" type="INavigateToAlipayPageOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;小程序中跳转到支付宝官方业务或运营活动页面，例如共享单车、城市服务。&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IFaceVerifySuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="zimId" type="String">
                <description>&lt;p&gt;刷脸认证标识&lt;/p&gt;
</description>
            </property>
            <property name="faceRetCode" type="None">
                <description>&lt;p&gt;刷脸认证结果返回码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1000：刷脸认证成功&lt;/li&gt;
&lt;li&gt;1001：系统错误&lt;/li&gt;
&lt;li&gt;1003：验证中断&lt;/li&gt;
&lt;li&gt;2002：网络错误&lt;/li&gt;
&lt;li&gt;2006：刷脸失败&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="retCode" type="None">
                <description>&lt;p&gt;认证可用性返回码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OK_SUCCESS：刷脸可用性判断通过，代表刷脸功能可用&lt;/li&gt;
&lt;li&gt;SYSTEM_ERROR：系统错误&lt;/li&gt;
&lt;li&gt;ACCOUNT_SERVICE_SUSPEND：用户不可用刷脸&lt;/li&gt;
&lt;li&gt;HIGH_RISK：刷脸失败次数过多，请稍候再试&lt;/li&gt;
&lt;li&gt;DEVICE_NOT_SUPPORT：设备不支持刷脸&lt;/li&gt;
&lt;li&gt;OS_NOT_SUPPORT：手机操作系统不支持刷脸&lt;/li&gt;
&lt;li&gt;SDKVERSION_NOT_SUPPORT：SDK版本不支持&lt;/li&gt;
&lt;li&gt;ASSET_NOT_AVAILABLE：刷脸资源未准备好&lt;/li&gt;
&lt;li&gt;UNABLE_GET_IMAGE：比对源不可用&lt;/li&gt;
&lt;li&gt;ALG_NOT_SUPPORT：算法不支持&lt;/li&gt;
&lt;li&gt;NOT_REAL_NAME：非实名认证用户&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="retCodeSub" type="String">
                <description>&lt;p&gt;认证可用性返回码明细&lt;/p&gt;
</description>
            </property>
            <property name="retMessageSub" type="String">
                <description>&lt;p&gt;认证可用性结果描述&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IFaceVerifyOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IFaceVerifySuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数 (返回刷脸调用结果，包括刷脸认证成功和失败的结果)&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数 （返回小程序框架系统错误）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="bizId" type="String">
                <description>&lt;p&gt;业务流水号，需要保证唯一性，不超过64位&lt;/p&gt;
</description>
            </property>
            <property name="bizType" type="String">
                <description>&lt;p&gt;填写 2，代表刷脸认证场景&lt;/p&gt;
</description>
            </property>
            <property name="useBackCamera" type="Boolean">
                <description>&lt;p&gt;是否使用后置摄像头，true为使用后置摄像头；不设置时，默认使用前置摄像头&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IUpdateAlipayClientSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="success" type="Boolean">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IUpdateAlipayClientOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IUpdateAlipayClientSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转成功&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;ul&gt;
&lt;li&gt;3：发生未知错误&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="INavigateToAlipayPageSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="success" type="Boolean">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="INavigateToAlipayPageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="INavigateToAlipayPageSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转成功&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;跳转失败&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2：参数错误，打开失败&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="path" type="String">
                <description>&lt;p&gt;要跳转的支付宝业务、运营活动schema或url，如果url中带有参数，请务必先将整个url做encode处理&lt;/p&gt;
&lt;p&gt;注：path目前暂未全量开放，跳转链接请找对应的接口人咨询。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IWebViewContext" superclass="None">
        <methods>
            <method name="postMessage">
                <parameters>
                    <parameter name="msg" type="Record"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;小程序向web-view组件发送消息，配合web-view.js中提供的my.postMessage可以实现小程序和web-view网页的双向通信&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IChooseImageSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="apFilePaths" type="ReadonlyArray">
                <description>&lt;p&gt;本地文件路径列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseImageOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11：用户取消操作&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="count" type="Number">
                <description>&lt;p&gt;最多可以选择的图片张数，默认9&lt;/p&gt;
</description>
            </property>
            <property name="sizeType" type="None">
                <description>&lt;p&gt;original 原图，compressed 压缩图，默认二者都有&lt;/p&gt;
</description>
            </property>
            <property name="sourceType" type="None">
                <description>&lt;p&gt;album 从相册选图，camera 使用相机，默认二者都有&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;成功则返回图片的本地文件路径列表 tempFilePaths&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IPreviewImageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="current" type="Number">
                <description>&lt;p&gt;当前显示图片索引，默认 0&lt;/p&gt;
</description>
            </property>
            <property name="urls" type="None">
                <description>&lt;p&gt;需要预览的图片链接列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetImageInfoSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="width" type="Number">
                <description>&lt;p&gt;图片宽度，单位px&lt;/p&gt;
</description>
            </property>
            <property name="height" type="Number">
                <description>&lt;p&gt;图片高度 单位px&lt;/p&gt;
</description>
            </property>
            <property name="path" type="String">
                <description>&lt;p&gt;图片本地路径&lt;/p&gt;
</description>
            </property>
            <property name="orientation" type="None">
                <description>&lt;p&gt;返回图片的方向&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;up：默认&lt;/li&gt;
&lt;li&gt;down：180度旋转&lt;/li&gt;
&lt;li&gt;left：逆时针旋转90度&lt;/li&gt;
&lt;li&gt;right：顺时针旋转90度&lt;/li&gt;
&lt;li&gt;up-mirrored：同up，但水平翻转&lt;/li&gt;
&lt;li&gt;down-mirrored：同down，但水平翻转&lt;/li&gt;
&lt;li&gt;left-mirrored：同left，但垂直翻转&lt;/li&gt;
&lt;li&gt;right-mirrored：同right，但垂直翻转&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="type" type="String">
                <description>&lt;p&gt;返回图片的格式&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetImageInfoOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="src" type="String">
                <description>&lt;p&gt;图片的路径，可以是相对路径，临时文件路径，存储文件路径&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;接口调用成功的回调函数，包含图片信息&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISaveImageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="error" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2：参数无效，没有传 url 参数&lt;/li&gt;
&lt;li&gt;15：没有开启相册权限(ios only)&lt;/li&gt;
&lt;li&gt;16：手机相册存储空间不足(ios only)&lt;/li&gt;
&lt;li&gt;17：保存图片过程中的其他错误&lt;/li&gt;
&lt;/ul&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;要保存的图片链接&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ICompressImageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="apFilePaths" type="None">
                <description>&lt;p&gt;要压缩的图片地址数组&lt;/p&gt;
</description>
            </property>
            <property name="compressLevel" type="None">
                <description>&lt;p&gt;压缩级别，支持 0 ~ 4 的整数，默认 4。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0：低质量&lt;/li&gt;
&lt;li&gt;1：中等质量&lt;/li&gt;
&lt;li&gt;2：高质量&lt;/li&gt;
&lt;li&gt;3：不压缩&lt;/li&gt;
&lt;li&gt;4：根据网络适应&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISetStorageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
            <property name="data" type="None">
                <description>&lt;p&gt;要缓存的数据&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISetStorageSyncOptions" superclass="None">
        <methods/>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
            <property name="data" type="None">
                <description>&lt;p&gt;要缓存的数据&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetStorageSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="None">
                <description>&lt;p&gt;key对应的内容&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetStorageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetStorageSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetStorageSyncOptions" superclass="None">
        <methods/>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRemoveStorageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRemoveStorageSyncOptions" superclass="None">
        <methods/>
        <properties>
            <property name="key" type="String">
                <description>&lt;p&gt;缓存数据的key&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStorageInfo" superclass="None">
        <methods/>
        <properties>
            <property name="keys" type="ReadonlyArray">
                <description>&lt;p&gt;当前storage中所有的key&lt;/p&gt;
</description>
            </property>
            <property name="currentSize" type="String">
                <description>&lt;p&gt;当前占用的空间大小, 单位KB&lt;/p&gt;
</description>
            </property>
            <property name="limitSize" type="String">
                <description>&lt;p&gt;限制的空间大小，单位KB&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetStorageInfoOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IStorageInfo"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ISaveFileSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="savedFilePath" type="String">
                <description>&lt;p&gt;文件的保存路径&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISaveFileOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="tempFilePath" type="String">
                <description>&lt;p&gt;需要保存的文件的临时路径&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;返回文件的保存路径，res = {savedFilePath: &amp;#39;文件的保存路径&amp;#39;}&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IFileListItem" superclass="None">
        <methods/>
        <properties>
            <property name="filePath" type="String">
                <description>&lt;p&gt;文件的本地路径&lt;/p&gt;
</description>
            </property>
            <property name="createTime" type="Number">
                <description>&lt;p&gt;文件的保存时的时间戳，从1970/01/01 08:00:00 到当前时间的秒数&lt;/p&gt;
</description>
            </property>
            <property name="size" type="Number">
                <description>&lt;p&gt;文件大小，单位B&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSavedFileListSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="errMsg" type="String">
                <description>&lt;p&gt;接口调用结果&lt;/p&gt;
</description>
            </property>
            <property name="fileList" type="ReadonlyArray">
                <description>&lt;p&gt;文件列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSavedFileListOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="success" type="Function">
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSavedFileInfoSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="errMsg" type="String">
                <description>&lt;p&gt;接口调用结果&lt;/p&gt;
</description>
            </property>
            <property name="createTime" type="Number">
                <description>&lt;p&gt;文件的保存时的时间戳，从1970/01/01 08:00:00 到当前时间的秒数&lt;/p&gt;
</description>
            </property>
            <property name="size" type="Number">
                <description>&lt;p&gt;文件大小，单位B&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSavedFileInfoOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="filePath" type="String">
                <description>&lt;p&gt;文件路径&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRemoveSavedFileOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="filePath" type="String">
                <description>&lt;p&gt;需要删除的文件路径&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetFileInfoSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="size" type="Number">
                <description></description>
            </property>
            <property name="digest" type="String">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IGetFileInfoOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetFileInfoSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="apFilePath" type="String">
                <description></description>
            </property>
            <property name="digestAlgorithm" type="None">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="ILocation" superclass="None">
        <methods/>
        <properties>
            <property name="latitude" type="Number">
                <description>&lt;p&gt;纬度，浮点数，范围为-90~90，负数表示南纬&lt;/p&gt;
</description>
            </property>
            <property name="longitude" type="Number">
                <description>&lt;p&gt;经度，浮点数，范围为-180~180，负数表示西经&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetLocationSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="cityAdcode" type="String">
                <description>&lt;p&gt;城市级别的地区代码(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="countryCode" type="String">
                <description>&lt;p&gt;国家编号 (type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="province" type="String">
                <description>&lt;p&gt;省份(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="districtAdcode" type="String">
                <description>&lt;p&gt;区县级别的地区代码(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="pois" type="ReadonlyArray">
                <description>&lt;p&gt;需要POI级别逆地理的才会有的字段,定位点附近的 POI 信息，结构是：{name, address}（type&amp;gt;2生效）&lt;/p&gt;
</description>
            </property>
            <property name="city" type="String">
                <description>&lt;p&gt;城市(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="district" type="String">
                <description>&lt;p&gt;区县(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="streetNumber" type="None">
                <description>&lt;p&gt;需要街道级别逆地理的才会有的字段,街道门牌信息，结构是：{street, number} (type&amp;gt;1生效)&lt;/p&gt;
</description>
            </property>
            <property name="country" type="String">
                <description>&lt;p&gt;国家(type&amp;gt;0生效)&lt;/p&gt;
</description>
            </property>
            <property name="bearing" type="String">
                <description></description>
            </property>
            <property name="latitude" type="String">
                <description>&lt;p&gt;纬度&lt;/p&gt;
</description>
            </property>
            <property name="accuracy" type="String">
                <description>&lt;p&gt;精确度，单位m&lt;/p&gt;
</description>
            </property>
            <property name="longitude" type="String">
                <description>&lt;p&gt;经度&lt;/p&gt;
</description>
            </property>
            <property name="horizontalAccuracy" type="String">
                <description>&lt;p&gt;水平精确度，单位m&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetLocationFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;11：请确认定位相关权限已开启。提示用户打开定位权限&lt;/li&gt;
&lt;li&gt;12：网络异常，请稍后再试。提示用户检查当前网络&lt;/li&gt;
&lt;li&gt;13：定位失败，请稍后再试&lt;/li&gt;
&lt;li&gt;14：业务定位超时。提示用户再次尝试&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetLocationOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IGetLocationFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="cacheTimeout" type="Number">
                <description>&lt;p&gt;支付宝客户端经纬度定位缓存过期时间，单位秒。默认 30s。使用缓存会加快定位速度，缓存过期会重新定位&lt;/p&gt;
</description>
            </property>
            <property name="type" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;0：默认，获取经纬度&lt;/li&gt;
&lt;li&gt;1：获取经纬度和详细到区县级别的逆地理编码数据&lt;/li&gt;
&lt;li&gt;2：获取经纬度和详细到街道级别的逆地理编码数据，不推荐使用&lt;/li&gt;
&lt;li&gt;3：获取经纬度和详细到POI级别的逆地理编码&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseLocationResult" superclass="None">
        <methods/>
        <properties>
            <property name="name" type="String">
                <description>&lt;p&gt;位置名称&lt;/p&gt;
</description>
            </property>
            <property name="address" type="String">
                <description>&lt;p&gt;详细地址&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IChooseLocationOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="IChooseLocationResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="success" type="Function">
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenLocationOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="scale" type="Number">
                <description>&lt;p&gt;缩放比例，范围1~28，默认为28&lt;/p&gt;
</description>
            </property>
            <property name="name" type="String">
                <description>&lt;p&gt;位置名&lt;/p&gt;
</description>
            </property>
            <property name="address" type="String">
                <description>&lt;p&gt;地址的详细说明&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IHttpRequestSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="Object">
                <description>&lt;p&gt;响应数据，格式取决于请求时的 dataType 参数&lt;/p&gt;
</description>
            </property>
            <property name="status" type="None">
                <description>&lt;p&gt;响应码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11：无权跨域&lt;/li&gt;
&lt;li&gt;12：网络出错&lt;/li&gt;
&lt;li&gt;13：超时&lt;/li&gt;
&lt;li&gt;14：解码失败&lt;/li&gt;
&lt;li&gt;15：HTTP错误&lt;/li&gt;
&lt;li&gt;16：请求已被停止/服务端限流&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="headers" type="Readonly">
                <description>&lt;p&gt;响应头&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IHttpRequestOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IHttpRequestSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;目标服务器url&lt;/p&gt;
</description>
            </property>
            <property name="headers" type="Record">
                <description>&lt;p&gt;设置请求的 HTTP 头，默认 {&amp;#39;content-type&amp;#39;: &amp;#39;application/json&amp;#39;}&lt;/p&gt;
</description>
            </property>
            <property name="method" type="None">
                <description>&lt;p&gt;默认GET，目前支持GET/POST&lt;/p&gt;
</description>
            </property>
            <property name="data" type="Record">
                <description>&lt;p&gt;请求参数。&lt;/p&gt;
&lt;p&gt;传给服务器的数据最终会是 String 类型，如果 data 不是 String 类型，会被转换成 String 。转换规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若方法为GET，会将数据转换成 query string： encodeURIComponent(k)=encodeURIComponent(v)&amp;amp;encodeURIComponent(k)=encodeURIComponent(v)...&lt;/li&gt;
&lt;li&gt;若方法为 POST 且 headers[&amp;#39;content-type&amp;#39;] 为 application/json ，会对数据进行 JSON 序列化&lt;/li&gt;
&lt;li&gt;若方法为 POST 且 headers[&amp;#39;content-type&amp;#39;] 为 application/x-www-form-urlencoded ，会将数据转换成 query string： encodeURIComponent(k)=encodeURIComponent(v)&amp;amp;encodeURIComponent(k)=encodeURIComponent(v)...&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="timeout" type="Number">
                <description>&lt;p&gt;超时时间，单位ms，默认30000&lt;/p&gt;
</description>
            </property>
            <property name="dataType" type="None">
                <description>&lt;p&gt;期望返回的数据格式，默认json，支持json，text，base64&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IUploadFileSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="String">
                <description>&lt;p&gt;开发者服务器返回的数据&lt;/p&gt;
</description>
            </property>
            <property name="statusCode" type="Number">
                <description>&lt;p&gt;HTTP状态码&lt;/p&gt;
</description>
            </property>
            <property name="header" type="Readonly">
                <description>&lt;p&gt;服务器返回的 header&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IUploadFileOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;开发者服务器 url&lt;/p&gt;
</description>
            </property>
            <property name="filePath" type="String">
                <description>&lt;p&gt;要上传文件资源的路径&lt;/p&gt;
</description>
            </property>
            <property name="fileName" type="String">
                <description>&lt;p&gt;文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容&lt;/p&gt;
</description>
            </property>
            <property name="fileType" type="None">
                <description>&lt;p&gt;文件类型，image / video / audio&lt;/p&gt;
</description>
            </property>
            <property name="header" type="Record">
                <description>&lt;p&gt;HTTP 请求 Header , header 中不能设置 Referer&lt;/p&gt;
</description>
            </property>
            <property name="formData" type="Record">
                <description>&lt;p&gt;HTTP 请求中其他额外的 form data&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;收到开发者服务成功返回的回调函数，res = {data: &amp;#39;开发者服务器返回的内容&amp;#39;}&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDownloadFileSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="apFilePath" type="String">
                <description>&lt;p&gt;文件的临时路径&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDownloadFileFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;12：下载失败&lt;/li&gt;
&lt;li&gt;13：没有权限&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDownloadFileOptions" superclass="None">
        <methods>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IDownloadFileFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;下载资源的 url&lt;/p&gt;
</description>
            </property>
            <property name="header" type="Record">
                <description>&lt;p&gt;HTTP 请求 Header&lt;/p&gt;
</description>
            </property>
            <property name="success" type="Function">
                <description>&lt;p&gt;下载成功后以 apFilePath 的形式传给页面，res = {apFilePath: &amp;#39;文件的临时路径&amp;#39;}&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IConnectFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;1：未知错误&lt;/li&gt;
&lt;li&gt;2：网络连接已经存在&lt;/li&gt;
&lt;li&gt;3：URL参数为空&lt;/li&gt;
&lt;li&gt;4：无法识别的URL格式&lt;/li&gt;
&lt;li&gt;5：URL必须以ws或者wss开头&lt;/li&gt;
&lt;li&gt;6：连接服务器超时&lt;/li&gt;
&lt;li&gt;7：服务器返回的https证书无效&lt;/li&gt;
&lt;li&gt;8：服务端返回协议头无效&lt;/li&gt;
&lt;li&gt;9：WebSocket请求没有指定Sec-WebSocket-Protocol请求头&lt;/li&gt;
&lt;li&gt;10：网络连接没有打开，无法发送消息&lt;/li&gt;
&lt;li&gt;11：消息发送失败&lt;/li&gt;
&lt;li&gt;12：无法申请更多内存来读取网络数据&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IConnectSocketOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IConnectFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="IConnectFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="url" type="String">
                <description>&lt;p&gt;开发者服务器接口地址，必须是 wss 协议，且域名必须是后台配置的合法域名&lt;/p&gt;
</description>
            </property>
            <property name="data" type="String">
                <description>&lt;p&gt;请求的数据&lt;/p&gt;
</description>
            </property>
            <property name="header" type="Record">
                <description>&lt;p&gt;HTTP Header , header 中不能设置 Referer&lt;/p&gt;
</description>
            </property>
            <property name="method" type="None">
                <description>&lt;p&gt;默认是GET，有效值为： OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISendSocketMessageOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="data" type="String">
                <description>&lt;p&gt;需要发送的内容：普通的文本内容 String 或者经 base64 编码后的 String&lt;/p&gt;
</description>
            </property>
            <property name="isBuffer" type="Boolean">
                <description>&lt;p&gt;如果需要发送二进制数据，需要将入参数据经 base64 编码成 String 后赋值 data，同时将此字段设置为true，否则如果是普通的文本内容 String，不需要设置此字段&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ISocketMessageResponse" superclass="None">
        <methods/>
        <properties>
            <property name="data" type="String">
                <description>&lt;p&gt;服务器返回的消息&lt;/p&gt;
</description>
            </property>
            <property name="isBuffer" type="Boolean">
                <description>&lt;p&gt;如果此字段值为true，data字段表示接收到的经过了 base64 编码后的 String，否则 data 字段表示接收到的普通 String 文本。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ICloseSocketOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetNetworkTypeSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="networkAvailable" type="Boolean">
                <description>&lt;p&gt;网络是否可用&lt;/p&gt;
</description>
            </property>
            <property name="networkType" type="INetworkType">
                <description>&lt;p&gt;网络类型值 UNKNOWN / NOTREACHABLE / WIFI / 3G / 2G / 4G / WWAN&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetNetworkTypeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetNetworkTypeSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IOnNetworkStatusChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="isConnected" type="Boolean">
                <description>&lt;p&gt;网络是否可用&lt;/p&gt;
</description>
            </property>
            <property name="networkType" type="INetworkType">
                <description>&lt;p&gt;网络类型值 UNKNOWN / NOTREACHABLE / WIFI / 3G / 2G / 4G / WWAN&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSystemInfoSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="fontSizeSetting" type="Number">
                <description>&lt;p&gt;用户设置字体大小&lt;/p&gt;
</description>
            </property>
            <property name="system" type="String">
                <description>&lt;p&gt;系统版本&lt;/p&gt;
</description>
            </property>
            <property name="version" type="String">
                <description>&lt;p&gt;支付宝版本号&lt;/p&gt;
</description>
            </property>
            <property name="brand" type="String">
                <description>&lt;p&gt;手机品牌&lt;/p&gt;
</description>
            </property>
            <property name="currentBattery" type="String">
                <description>&lt;p&gt;当前电量百分比&lt;/p&gt;
</description>
            </property>
            <property name="windowHeight" type="Number">
                <description>&lt;p&gt;窗口高度&lt;/p&gt;
</description>
            </property>
            <property name="pixelRatio" type="Number">
                <description>&lt;p&gt;设备像素比&lt;/p&gt;
</description>
            </property>
            <property name="platform" type="None">
                <description>&lt;p&gt;系统名：Android，iOS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意: 小程序文档中写的Android/iOS, 实际调用返回值为 android/ios/iphone(低版本)&lt;pre&gt;&lt;code&gt;未避免小程序框架后续改造造成不兼容，建议转换成小写之后再进行比较&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
            <property name="screenHeight" type="Number">
                <description>&lt;p&gt;屏幕高度&lt;/p&gt;
</description>
            </property>
            <property name="statusBarHeight" type="Number">
                <description>&lt;p&gt;状态栏高度&lt;/p&gt;
</description>
            </property>
            <property name="language" type="String">
                <description>&lt;p&gt;支付宝设置的语言&lt;/p&gt;
</description>
            </property>
            <property name="storage" type="String">
                <description>&lt;p&gt;设备磁盘容量&lt;/p&gt;
</description>
            </property>
            <property name="app" type="String">
                <description>&lt;p&gt;当前运行的客户端，当前是支付宝则有效值是&amp;quot;alipay&amp;quot;&lt;/p&gt;
</description>
            </property>
            <property name="titleBarHeight" type="Number">
                <description>&lt;p&gt;标题栏高度&lt;/p&gt;
</description>
            </property>
            <property name="model" type="String">
                <description>&lt;p&gt;手机型号&lt;/p&gt;
</description>
            </property>
            <property name="screenWidth" type="Number">
                <description>&lt;p&gt;屏幕宽度&lt;/p&gt;
</description>
            </property>
            <property name="windowWidth" type="Number">
                <description>&lt;p&gt;窗口宽度&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSystemInfoOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetSystemInfoSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IClipboardOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="text" type="String"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IWatchShakeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IVibrateOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IVibrateLongOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IVibrateShortOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IOnAccelerometerChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="x" type="Number">
                <description>&lt;p&gt;X 轴&lt;/p&gt;
</description>
            </property>
            <property name="y" type="Number">
                <description>&lt;p&gt;Y 轴&lt;/p&gt;
</description>
            </property>
            <property name="z" type="Number">
                <description>&lt;p&gt;Z 轴&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnGyroscopeChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="x" type="Number">
                <description>&lt;p&gt;x轴方向角速度&lt;/p&gt;
</description>
            </property>
            <property name="y" type="Number">
                <description>&lt;p&gt;y轴方向角速度&lt;/p&gt;
</description>
            </property>
            <property name="z" type="Number">
                <description>&lt;p&gt;z轴方向角速度&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnCompassChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="direction" type="Number">
                <description>&lt;p&gt;面对的方向与正北方向的度数[0,360)&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IMakePhoneCallOptions" superclass="None">
        <methods/>
        <properties>
            <property name="number" type="String">
                <description>&lt;p&gt;电话号码&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetServerTimeSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="time" type="Number">
                <description>&lt;p&gt;服务器时间的毫秒数&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetServerTimeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetServerTimeSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ISetKeepScreenOnOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="keepScreenOn" type="Boolean">
                <description>&lt;p&gt;是否保持屏幕长亮状态&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetScreenBrightnessOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="ISetScreenBrightnessOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="brightness" type="Number">
                <description>&lt;p&gt;需要设置的屏幕亮度，取值范围0-1&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenSettingSuccessOptions" superclass="None">
        <methods/>
        <properties>
            <property name="authSetting" type="Readonly">
                <description>&lt;p&gt;用户授权结果，其中 key 为 scope 值，value 为 Bool 值，表示用户是否允许授权，详见&lt;a href="https://docs.alipay.com/mini/api/xmk3ml#scope-%E5%88%97%E8%A1%A8"&gt;scope列表&lt;/a&gt;。&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenSettingOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IOpenSettingSuccessOptions"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetSettingSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="authSetting" type="Readonly">
                <description>&lt;p&gt;用户授权结果，其中 key 为 scope 值，value 为 Bool 值，表示用户是否允许授权，详见&lt;a href="https://docs.alipay.com/mini/api/xmk3ml#scope-%E5%88%97%E8%A1%A8"&gt;scope列表&lt;/a&gt;&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetSettingOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetSettingSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;接口调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IAddPhoneContactOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="AddPhoneContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="AddPhoneContactSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="photoFilePath" type="String">
                <description>&lt;p&gt;头像本地文件路径&lt;/p&gt;
</description>
            </property>
            <property name="nickName" type="String">
                <description>&lt;p&gt;昵称&lt;/p&gt;
</description>
            </property>
            <property name="lastName" type="String">
                <description>&lt;p&gt;姓氏&lt;/p&gt;
</description>
            </property>
            <property name="middleName" type="String">
                <description>&lt;p&gt;中间名&lt;/p&gt;
</description>
            </property>
            <property name="firstName" type="String">
                <description>&lt;p&gt;名字&lt;/p&gt;
</description>
            </property>
            <property name="remark" type="String">
                <description>&lt;p&gt;备注&lt;/p&gt;
</description>
            </property>
            <property name="mobilePhoneNumber" type="String">
                <description>&lt;p&gt;手机号&lt;/p&gt;
</description>
            </property>
            <property name="alipayAccount" type="String">
                <description>&lt;p&gt;支付宝账号&lt;/p&gt;
</description>
            </property>
            <property name="addressCountry" type="String">
                <description>&lt;p&gt;联系地址国家&lt;/p&gt;
</description>
            </property>
            <property name="addressState" type="String">
                <description>&lt;p&gt;联系地址省份&lt;/p&gt;
</description>
            </property>
            <property name="addressCity" type="String">
                <description>&lt;p&gt;联系地址城市&lt;/p&gt;
</description>
            </property>
            <property name="addressStreet" type="String">
                <description>&lt;p&gt;联系地址街道&lt;/p&gt;
</description>
            </property>
            <property name="addressPostalCode" type="String">
                <description>&lt;p&gt;联系地址邮政编码&lt;/p&gt;
</description>
            </property>
            <property name="organization" type="String">
                <description>&lt;p&gt;公司&lt;/p&gt;
</description>
            </property>
            <property name="title" type="String">
                <description>&lt;p&gt;职位&lt;/p&gt;
</description>
            </property>
            <property name="workFaxNumber" type="String">
                <description>&lt;p&gt;工作传真&lt;/p&gt;
</description>
            </property>
            <property name="workPhoneNumber" type="String">
                <description>&lt;p&gt;工作电话&lt;/p&gt;
</description>
            </property>
            <property name="hostNumber" type="String">
                <description>&lt;p&gt;公司电话&lt;/p&gt;
</description>
            </property>
            <property name="email" type="String">
                <description>&lt;p&gt;电子邮件&lt;/p&gt;
</description>
            </property>
            <property name="url" type="String">
                <description>&lt;p&gt;网站&lt;/p&gt;
</description>
            </property>
            <property name="workAddressCountry" type="String">
                <description>&lt;p&gt;工作地址国家&lt;/p&gt;
</description>
            </property>
            <property name="workAddressState" type="String">
                <description>&lt;p&gt;工作地址省份&lt;/p&gt;
</description>
            </property>
            <property name="workAddressCity" type="String">
                <description>&lt;p&gt;工作地址城市&lt;/p&gt;
</description>
            </property>
            <property name="workAddressStreet" type="String">
                <description>&lt;p&gt;工作地址街道&lt;/p&gt;
</description>
            </property>
            <property name="workAddressPostalCode" type="String">
                <description>&lt;p&gt;工作地址邮政编码&lt;/p&gt;
</description>
            </property>
            <property name="homeFaxNumber" type="String">
                <description>&lt;p&gt;住宅传真&lt;/p&gt;
</description>
            </property>
            <property name="homePhoneNumber" type="String">
                <description>&lt;p&gt;住宅电话&lt;/p&gt;
</description>
            </property>
            <property name="homeAddressCountry" type="String">
                <description>&lt;p&gt;住宅地址国家&lt;/p&gt;
</description>
            </property>
            <property name="homeAddressState" type="String">
                <description>&lt;p&gt;住宅地址省份&lt;/p&gt;
</description>
            </property>
            <property name="homeAddressCity" type="String">
                <description>&lt;p&gt;住宅地址城市&lt;/p&gt;
</description>
            </property>
            <property name="homeAddressStreet" type="String">
                <description>&lt;p&gt;住宅地址街道&lt;/p&gt;
</description>
            </property>
            <property name="homeAddressPostalCode" type="String">
                <description>&lt;p&gt;住宅地址邮政编码&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IShowAuthGuideOptions" superclass="None">
        <methods/>
        <properties>
            <property name="authType" type="AuthType">
                <description>&lt;p&gt;引导的权限标识，用于标识该权限类型(如 LBS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BACKGROUNDER：后台保活权限【Android】&lt;/li&gt;
&lt;li&gt;SHORTCUT：桌面快捷权限【Android】&lt;/li&gt;
&lt;li&gt;MICROPHONE：麦克风权限【iOS】&lt;/li&gt;
&lt;li&gt;ADDRESSBOOK：通讯录权限【iOS】&lt;/li&gt;
&lt;li&gt;CAMERA：相机权限【iOS】&lt;/li&gt;
&lt;li&gt;PHOTO：照片权限【iOS】&lt;/li&gt;
&lt;li&gt;NOTIFICATION：push通知栏权限【iOS】&lt;/li&gt;
&lt;li&gt;SELFSTARTING：自启动权限【Android】&lt;/li&gt;
&lt;li&gt;LBSSERVICE：lbs总开关【iOS】&lt;/li&gt;
&lt;li&gt;LBS：lbs开关(app)【iOS】&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IScanSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="code" type="String">
                <description>&lt;p&gt;扫码所得数据&lt;/p&gt;
</description>
            </property>
            <property name="qrCode" type="String">
                <description>&lt;p&gt;扫描二维码时返回二维码数据&lt;/p&gt;
</description>
            </property>
            <property name="barCode" type="String">
                <description>&lt;p&gt;扫描条形码时返回条形码数据&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IScanFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ol&gt;
&lt;li&gt;10，用户取消；&lt;/li&gt;
&lt;li&gt;11，操作失败。&lt;/li&gt;
&lt;/ol&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IScanOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IScanSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IScanFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="type" type="None">
                <description>&lt;p&gt;扫码样式(默认 qr)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;qr，扫码框样式为二维码扫码框；&lt;/li&gt;
&lt;li&gt;bar，扫码样式为条形码扫码框。&lt;/li&gt;
&lt;/ol&gt;
</description>
            </property>
            <property name="hideAlbum" type="Boolean">
                <description>&lt;p&gt;是否隐藏相册（不允许从相册选择图片），只能从相机扫码&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenBluetoothAdapterSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="isSupportBLE" type="Boolean">
                <description>&lt;p&gt;是否支持 BLE&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenBluetoothAdapterFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;12：蓝牙未打开&lt;/li&gt;
&lt;li&gt;13：与系统服务的链接暂时丢失&lt;/li&gt;
&lt;li&gt;14：未授权支付宝使用蓝牙功能&lt;/li&gt;
&lt;li&gt;15：未知错误&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOpenBluetoothAdapterOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IOpenBluetoothAdapterSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IOpenBluetoothAdapterFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="autoClose" type="Boolean">
                <description>&lt;p&gt;不传的话默认是true，表示是否在离开当前页面时自动断开蓝牙(仅对android有效)&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="ICloseBluetoothAdapterOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetBluetoothAdapterStateSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="discovering" type="Boolean">
                <description>&lt;p&gt;是否正在搜索设备&lt;/p&gt;
</description>
            </property>
            <property name="available" type="Boolean">
                <description>&lt;p&gt;蓝牙模块是否可用(需支持 BLE 并且蓝牙是打开状态)&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBluetoothAdapterStateOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetBluetoothAdapterStateSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IStartBluetoothDevicesDiscoveryOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="services" type="None">
                <description>&lt;p&gt;蓝牙设备主 service 的 uuid 列表&lt;/p&gt;
</description>
            </property>
            <property name="allowDuplicatesKey" type="Boolean">
                <description>&lt;p&gt;是否允许重复上报同一设备， 如果允许重复上报，则 onBluetoothDeviceFound 方法会多次上报同一设备，但是 RSSI 值会有不同&lt;/p&gt;
</description>
            </property>
            <property name="interval" type="Number">
                <description>&lt;p&gt;上报设备的间隔，默认为0，意思是找到新设备立即上报，否则根据传入的间隔上报&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStopBluetoothDevicesDiscoveryOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IBluetoothDevice" superclass="None">
        <methods/>
        <properties>
            <property name="name" type="String">
                <description>&lt;p&gt;蓝牙设备名称，某些设备可能没有&lt;/p&gt;
</description>
            </property>
            <property name="deviceName" type="String">
                <description>&lt;p&gt;值与 name 一致&lt;/p&gt;
</description>
            </property>
            <property name="localName" type="String">
                <description>&lt;p&gt;广播设备名称&lt;/p&gt;
</description>
            </property>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;设备 Id&lt;/p&gt;
</description>
            </property>
            <property name="RSSI" type="Number">
                <description>&lt;p&gt;设备信号强度&lt;/p&gt;
</description>
            </property>
            <property name="advertisData" type="String">
                <description>&lt;p&gt;设备的广播内容&lt;/p&gt;
</description>
            </property>
            <property name="manufacturerData" type="String">
                <description>&lt;p&gt;设备的manufacturerData&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBluetoothDevicesSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="devices" type="ReadonlyArray">
                <description>&lt;p&gt;已发现的设备列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBluetoothDevicesOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetBluetoothDevicesSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetConnectedBluetoothDevicesSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="devices" type="ReadonlyArray">
                <description>&lt;p&gt;已连接的设备列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetConnectedBluetoothDevicesOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetConnectedBluetoothDevicesSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="services" type="None">
                <description>&lt;p&gt;蓝牙设备主 service 的 uuid 列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IConnectBLEDeviceOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备id&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IDisconnectBLEDeviceOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备id&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IWriteBLECharacteristicValueOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="serviceId" type="String">
                <description>&lt;p&gt;蓝牙特征值对应 service 的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="characteristicId" type="String">
                <description>&lt;p&gt;蓝牙特征值的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="value" type="String">
                <description>&lt;p&gt;蓝牙设备特征值对应的值，16进制字符串，限制在20字节内&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IReadBLECharacteristicValueSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="characteristic" type="None">
                <description>&lt;p&gt;设备特征值信息&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IReadBLECharacteristicValueOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IReadBLECharacteristicValueSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="serviceId" type="String">
                <description>&lt;p&gt;蓝牙特征值对应 service 的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="characteristicId" type="String">
                <description>&lt;p&gt;蓝牙特征值的 uuid&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="INotifyBLECharacteristicValueChangeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="serviceId" type="String">
                <description>&lt;p&gt;蓝牙特征值对应 service 的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="characteristicId" type="String">
                <description>&lt;p&gt;蓝牙特征值的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="descriptorId" type="String">
                <description>&lt;p&gt;notify 的 descriptor 的 uuid （只有android 会用到，非必填，默认值00002902-0000-10008000-00805f9b34fb）&lt;/p&gt;
</description>
            </property>
            <property name="state" type="Boolean">
                <description>&lt;p&gt;是否启用notify或indicate&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBLEDeviceServicesSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="services" type="ReadonlyArray">
                <description>&lt;p&gt;设备service 对象列表，详见下表特征值信息&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBLEDeviceServicesOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetBLEDeviceServicesSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBLEDeviceCharacteristicsSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="characteristics" type="ReadonlyArray">
                <description>&lt;p&gt;设备特征值列&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBLEDeviceCharacteristicsOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetBLEDeviceCharacteristicsSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="serviceId" type="String">
                <description>&lt;p&gt;蓝牙特征值对应 service 的 uuid&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBluetoothDeviceFoundEvent" superclass="None">
        <methods/>
        <properties>
            <property name="devices" type="ReadonlyArray">
                <description>&lt;p&gt;新搜索到的设备列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBLECharacteristicValueChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="serviceId" type="String">
                <description>&lt;p&gt;蓝牙特征值对应 service 的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="characteristicId" type="String">
                <description>&lt;p&gt;蓝牙特征值的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="value" type="String">
                <description>&lt;p&gt;特征值最新的16进制值&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBLEConnectionStateChangedEvent" superclass="None">
        <methods/>
        <properties>
            <property name="deviceId" type="String">
                <description>&lt;p&gt;蓝牙设备 id，参考 device 对象&lt;/p&gt;
</description>
            </property>
            <property name="connected" type="String">
                <description>&lt;p&gt;连接目前的状态&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBluetoothAdapterStateChangeEvent" superclass="None">
        <methods/>
        <properties>
            <property name="available" type="Boolean">
                <description>&lt;p&gt;蓝牙模块是否可用&lt;/p&gt;
</description>
            </property>
            <property name="discovering" type="Boolean">
                <description>&lt;p&gt;蓝牙模块是否处于搜索状态&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStartBeaconDiscoveryOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="uuids" type="None">
                <description>&lt;p&gt;目标 iBeacon 设备广播的 uuids&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IStopBeaconDiscoveryOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IIBeacon" superclass="None">
        <methods/>
        <properties>
            <property name="uuid" type="String">
                <description>&lt;p&gt;iBeacon 设备广播的 uuid&lt;/p&gt;
</description>
            </property>
            <property name="major" type="String">
                <description>&lt;p&gt;iBeacon 设备的主 id&lt;/p&gt;
</description>
            </property>
            <property name="minor" type="String">
                <description>&lt;p&gt;iBeacon 设备的次 id&lt;/p&gt;
</description>
            </property>
            <property name="proximity" type="Number">
                <description>&lt;p&gt;表示设备距离的枚举值(0-3分别代表：未知、极近、近、远)&lt;/p&gt;
</description>
            </property>
            <property name="accuracy" type="Number">
                <description>&lt;p&gt;iBeacon 设备的距离&lt;/p&gt;
</description>
            </property>
            <property name="rssi" type="Number">
                <description>&lt;p&gt;iBeacon 信号强度&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBeaconsSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="beacons" type="ReadonlyArray">
                <description>&lt;p&gt;iBeacon 设备列表&lt;/p&gt;
</description>
            </property>
            <property name="errCode" type="String">
                <description>&lt;p&gt;errorCode=0 ,接口调用成功&lt;/p&gt;
</description>
            </property>
            <property name="errorMsg" type="String">
                <description>&lt;p&gt;ok&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetBeaconsOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetBeaconsSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="Object"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IOnBeaconUpdateSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="beacons" type="ReadonlyArray">
                <description>&lt;p&gt;当前搜寻到的所有 iBeacon 设备列表&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBeaconUpdateOptions" superclass="None">
        <methods/>
        <properties>
            <property name="success" type="Function">
                <description></description>
            </property>
        </properties>
    </class>
    <class type="IOnBeaconServiceChangeSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="available" type="Boolean">
                <description>&lt;p&gt;服务目前是否可用&lt;/p&gt;
</description>
            </property>
            <property name="discovering" type="Boolean">
                <description>&lt;p&gt;目前是否处于搜索状态&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IOnBeaconServiceChangeOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IOnBeaconServiceChangeSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IRSASuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="text" type="String">
                <description>&lt;p&gt;经过处理过后得到的文本，加密为Base64编码文本，解密为原始文本&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRSAFailResult" superclass="None">
        <methods/>
        <properties>
            <property name="error" type="None">
                <description>&lt;ul&gt;
&lt;li&gt;10：参数错误&lt;/li&gt;
&lt;li&gt;11：key错误&lt;/li&gt;
&lt;/ul&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IRSAOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IRSASuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters>
                    <parameter name="res" type="IRSAFailResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters>
                    <parameter name="res" type="None"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties>
            <property name="action" type="None">
                <description>&lt;p&gt;使用rsa加密还是rsa解密，encrypt加密，decrypt解密&lt;/p&gt;
</description>
            </property>
            <property name="text" type="String">
                <description>&lt;p&gt;要处理的文本，加密为原始文本，解密为Base64编码格式文本&lt;/p&gt;
</description>
            </property>
            <property name="key" type="String">
                <description>&lt;p&gt;rsa秘钥，加密使用公钥，解密使用私钥&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IHideShareMenuOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;分享失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
            <method name="success">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用成功的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="fail">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用失败的回调函数&lt;/p&gt;
</description>
            </method>
            <method name="complete">
                <parameters/>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description>&lt;p&gt;调用结束的回调函数（调用成功、失败都会执行）&lt;/p&gt;
</description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="IGetRunSceneSuccessResult" superclass="None">
        <methods/>
        <properties>
            <property name="envVersion" type="None">
                <description>&lt;p&gt;小程序当前运行的版本，枚举类型：develop（开发版）、trial（体验版）、release（发布版）&lt;/p&gt;
</description>
            </property>
        </properties>
    </class>
    <class type="IGetRunSceneOptions" superclass="None">
        <methods>
            <method name="success">
                <parameters>
                    <parameter name="res" type="IGetRunSceneSuccessResult"/>
                </parameters>
                <return-types>
                    <return-type type="void"/>
                </return-types>
                <description></description>
            </method>
        </methods>
        <properties/>
    </class>
    <class type="Global" superclass="None">
        <methods/>
        <properties/>
    </class>
</javascript>
